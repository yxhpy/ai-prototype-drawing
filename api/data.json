{
  "projects": [
    {
      "id": "8ff64d80-d8ea-4499-9b0b-d13fb14e4536",
      "name": "示例项目",
      "description": "这是一个示例项目",
      "createdAt": "2025-03-04T09:33:10.244Z",
      "updatedAt": "2025-03-04T09:33:10.245Z"
    },
    {
      "id": "e86922fc-4933-4377-8398-b434a3778400",
      "name": "文生成视频平台",
      "description": "AI驱动的文本到视频生成平台，支持自动生成文案、资源管理、口播匹配、背景音乐和视频合成",
      "thumbnail": "/images/projects/video-generation.jpg",
      "createdAt": "2025-03-04T10:16:05.332Z",
      "updatedAt": "2025-03-04T10:16:05.332Z"
    },
    {
      "id": "ca2e5768-42c3-4ae5-883e-5f7f96533334",
      "name": "校园外卖APP",
      "description": "为大学校园提供便捷的外卖订餐服务，支持多家校内餐厅，提供快速配送到宿舍楼",
      "thumbnail": "/images/projects/campus-food-delivery.jpg",
      "createdAt": "2025-03-04T10:16:05.367Z",
      "updatedAt": "2025-03-04T10:16:05.367Z"
    }
  ],
  "modules": [
    {
      "id": "1a8cbc3e-c6a7-4709-84a8-3f43298890c8",
      "projectId": "8ff64d80-d8ea-4499-9b0b-d13fb14e4536",
      "name": "示例模块",
      "description": "这是一个示例模块",
      "createdAt": "2025-03-04T09:33:10.245Z",
      "updatedAt": "2025-03-04T09:33:10.245Z"
    },
    {
      "id": "edf05583-da50-4130-bfff-b995dd8c15b4",
      "projectId": "e86922fc-4933-4377-8398-b434a3778400",
      "name": "自动生成文案",
      "description": "基于AI技术自动生成视频文案",
      "createdAt": "2025-03-04T10:16:05.334Z",
      "updatedAt": "2025-03-04T10:16:05.334Z"
    },
    {
      "id": "98d4f5f1-a792-42d8-bb27-5fca6c0b12a6",
      "projectId": "e86922fc-4933-4377-8398-b434a3778400",
      "name": "资源管理",
      "description": "管理视频制作所需的图片和视频资源",
      "createdAt": "2025-03-04T10:16:05.339Z",
      "updatedAt": "2025-03-04T10:16:05.339Z"
    },
    {
      "id": "67edcd51-c4d7-4493-89ae-dd63bd7e64ba",
      "projectId": "e86922fc-4933-4377-8398-b434a3778400",
      "name": "口播匹配画面",
      "description": "将口播内容与视觉元素匹配",
      "createdAt": "2025-03-04T10:16:05.347Z",
      "updatedAt": "2025-03-04T10:16:05.347Z"
    },
    {
      "id": "f94fee43-5575-4b1b-b04e-e166e0099db6",
      "projectId": "e86922fc-4933-4377-8398-b434a3778400",
      "name": "背景音乐",
      "description": "管理视频背景音乐",
      "createdAt": "2025-03-04T10:16:05.351Z",
      "updatedAt": "2025-03-04T10:16:05.351Z"
    },
    {
      "id": "2c238c18-bc65-42e2-8934-d7abf34b3980",
      "projectId": "e86922fc-4933-4377-8398-b434a3778400",
      "name": "视频合成",
      "description": "将所有元素合成为最终视频",
      "createdAt": "2025-03-04T10:16:05.359Z",
      "updatedAt": "2025-03-04T10:16:05.359Z"
    },
    {
      "id": "74698d41-b515-4a47-bf35-2389c6186b91",
      "projectId": "ca2e5768-42c3-4ae5-883e-5f7f96533334",
      "name": "首页与发现",
      "description": "浏览校园餐厅和美食",
      "createdAt": "2025-03-04T10:16:05.368Z",
      "updatedAt": "2025-03-04T10:16:05.368Z"
    },
    {
      "id": "e4d54da3-29cf-4158-a4e3-6bb42ccbecff",
      "projectId": "ca2e5768-42c3-4ae5-883e-5f7f96533334",
      "name": "餐厅与点餐",
      "description": "查看餐厅详情和菜单",
      "createdAt": "2025-03-04T10:16:05.373Z",
      "updatedAt": "2025-03-04T10:16:05.373Z"
    },
    {
      "id": "57cf69b7-e789-4b4d-b368-972e30784a9d",
      "projectId": "ca2e5768-42c3-4ae5-883e-5f7f96533334",
      "name": "订单与支付",
      "description": "管理订单和支付流程",
      "createdAt": "2025-03-04T10:16:05.381Z",
      "updatedAt": "2025-03-04T10:16:05.381Z"
    },
    {
      "id": "97e0204e-80bd-4043-9703-c21b53aacf1f",
      "projectId": "ca2e5768-42c3-4ae5-883e-5f7f96533334",
      "name": "个人中心",
      "description": "用户个人信息和功能",
      "createdAt": "2025-03-04T10:16:05.402Z",
      "updatedAt": "2025-03-04T10:16:05.402Z"
    },
    {
      "id": "a6fc7cee-5bd6-4750-afc5-6d9dbf3f0be4",
      "projectId": "ca2e5768-42c3-4ae5-883e-5f7f96533334",
      "name": "用户账户",
      "description": "用户登录、注册和账户管理",
      "createdAt": "2025-03-04T10:16:05.417Z",
      "updatedAt": "2025-03-04T10:16:05.417Z"
    }
  ],
  "pages": [
    {
      "id": "823d54c1-31dd-4dc2-bf24-2c29095afcac",
      "moduleId": "1a8cbc3e-c6a7-4709-84a8-3f43298890c8",
      "name": "示例页面",
      "description": "这是一个示例页面",
      "content": "这是一个示例页面的内容",
      "createdAt": "2025-03-04T09:33:10.245Z",
      "updatedAt": "2025-03-04T09:33:10.245Z"
    },
    {
      "id": "73eb5567-874a-4805-94d0-0a2531de193e",
      "moduleId": "edf05583-da50-4130-bfff-b995dd8c15b4",
      "name": "文案生成页面",
      "description": "输入关键词和主题，自动生成视频文案",
      "componentPath": "ScriptGenerationPage",
      "createdAt": "2025-03-04T10:16:05.336Z",
      "updatedAt": "2025-03-04T10:16:05.336Z"
    },
    {
      "id": "d31f1497-35b2-4cc7-b4c6-66ac0fb78616",
      "moduleId": "98d4f5f1-a792-42d8-bb27-5fca6c0b12a6",
      "name": "资源列表页面",
      "description": "查看和管理所有上传的资源",
      "componentPath": "ResourceListPage",
      "createdAt": "2025-03-04T10:16:05.340Z",
      "updatedAt": "2025-03-04T10:16:05.340Z"
    },
    {
      "id": "93468d0c-75a2-4131-b682-d7dc6876679c",
      "moduleId": "98d4f5f1-a792-42d8-bb27-5fca6c0b12a6",
      "name": "资源添加页面",
      "description": "上传新的图片或视频资源",
      "componentPath": "ResourceUploadPage",
      "createdAt": "2025-03-04T10:16:05.343Z",
      "updatedAt": "2025-03-04T10:16:05.343Z"
    },
    {
      "id": "1aef8640-72a9-4fc6-9e52-631affea070e",
      "moduleId": "67edcd51-c4d7-4493-89ae-dd63bd7e64ba",
      "name": "口播匹配页面",
      "description": "将文案段落与视觉资源匹配",
      "componentPath": "VoiceoverMatchingPage",
      "createdAt": "2025-03-04T10:16:05.348Z",
      "updatedAt": "2025-03-04T10:16:05.348Z"
    },
    {
      "id": "227f681e-000c-4763-911d-6e500f2adab9",
      "moduleId": "f94fee43-5575-4b1b-b04e-e166e0099db6",
      "name": "音乐列表页面",
      "description": "查看和管理背景音乐库",
      "componentPath": "MusicListPage",
      "createdAt": "2025-03-04T10:16:05.353Z",
      "updatedAt": "2025-03-04T10:16:05.353Z"
    },
    {
      "id": "2633f013-a75a-415f-9044-274d458d3e64",
      "moduleId": "f94fee43-5575-4b1b-b04e-e166e0099db6",
      "name": "音乐上传页面",
      "description": "上传新的背景音乐",
      "componentPath": "MusicUploadPage",
      "createdAt": "2025-03-04T10:16:05.356Z",
      "updatedAt": "2025-03-04T10:16:05.356Z"
    },
    {
      "id": "bdd1a0f3-4894-43b1-aca5-a81ae884ae95",
      "moduleId": "2c238c18-bc65-42e2-8934-d7abf34b3980",
      "name": "专场动画管理",
      "description": "管理视频中的转场动画效果",
      "componentPath": "TransitionEffectsPage",
      "createdAt": "2025-03-04T10:16:05.360Z",
      "updatedAt": "2025-03-04T10:16:05.360Z"
    },
    {
      "id": "df11df63-4fd6-438a-b0fb-67f2e05323dc",
      "moduleId": "2c238c18-bc65-42e2-8934-d7abf34b3980",
      "name": "一键生成视频",
      "description": "将所有元素合成为最终视频",
      "componentPath": "VideoGenerationPage",
      "createdAt": "2025-03-04T10:16:05.364Z",
      "updatedAt": "2025-03-04T10:16:05.364Z"
    },
    {
      "id": "057337be-08a0-4cc5-88c2-ce9d3a0b1946",
      "moduleId": "74698d41-b515-4a47-bf35-2389c6186b91",
      "name": "首页",
      "description": "展示热门餐厅和美食分类",
      "componentPath": "HomePage",
      "createdAt": "2025-03-04T10:16:05.370Z",
      "updatedAt": "2025-03-04T10:16:05.370Z"
    },
    {
      "id": "7fdcf43b-4bb4-467a-9bcb-2305d10fce4f",
      "moduleId": "e4d54da3-29cf-4158-a4e3-6bb42ccbecff",
      "name": "餐厅详情页",
      "description": "展示餐厅信息和菜单，支持添加商品到购物车",
      "componentPath": "RestaurantDetailPage",
      "createdAt": "2025-03-04T10:16:05.374Z",
      "updatedAt": "2025-03-04T10:16:05.374Z"
    },
    {
      "id": "71b106a8-b651-408f-ae25-3371cbb21055",
      "moduleId": "e4d54da3-29cf-4158-a4e3-6bb42ccbecff",
      "name": "购物车页面",
      "description": "管理购物车中的商品，支持结算",
      "componentPath": "CartPage",
      "createdAt": "2025-03-04T10:16:05.377Z",
      "updatedAt": "2025-03-04T10:16:05.377Z"
    },
    {
      "id": "02e9bd84-151e-4dd7-a9cb-24ca7fffbae4",
      "moduleId": "57cf69b7-e789-4b4d-b368-972e30784a9d",
      "name": "订单确认页",
      "description": "确认订单信息和支付方式",
      "componentPath": "OrderPage",
      "createdAt": "2025-03-04T10:16:05.384Z",
      "updatedAt": "2025-03-04T10:16:05.384Z"
    },
    {
      "id": "ecc4507b-4209-466d-a0b5-68000a88dc93",
      "moduleId": "57cf69b7-e789-4b4d-b368-972e30784a9d",
      "name": "订单历史页",
      "description": "查看历史订单和订单状态",
      "componentPath": "OrderHistoryPage",
      "createdAt": "2025-03-04T10:16:05.389Z",
      "updatedAt": "2025-03-04T10:16:05.389Z"
    },
    {
      "id": "0949897e-20de-4f4c-b349-2fea35e42d0c",
      "moduleId": "57cf69b7-e789-4b4d-b368-972e30784a9d",
      "name": "订单评价页",
      "description": "对已完成的订单进行评价和打分",
      "componentPath": "RatingPage",
      "createdAt": "2025-03-04T10:16:05.396Z",
      "updatedAt": "2025-03-04T10:16:05.396Z"
    },
    {
      "id": "424a1aca-d462-47ac-a897-01a27f74eaf6",
      "moduleId": "97e0204e-80bd-4043-9703-c21b53aacf1f",
      "name": "个人中心页",
      "description": "展示用户信息和功能入口",
      "componentPath": "ProfilePage",
      "createdAt": "2025-03-04T10:16:05.406Z",
      "updatedAt": "2025-03-04T10:16:05.406Z"
    },
    {
      "id": "fc367118-653e-4eec-b541-72f2c28a303d",
      "moduleId": "97e0204e-80bd-4043-9703-c21b53aacf1f",
      "name": "收藏页面",
      "description": "展示用户收藏的餐厅和食品",
      "componentPath": "FavoritesPage",
      "createdAt": "2025-03-04T10:16:05.410Z",
      "updatedAt": "2025-03-04T10:16:05.410Z"
    },
    {
      "id": "8887c22e-10ab-465d-8988-0361863f735b",
      "moduleId": "97e0204e-80bd-4043-9703-c21b53aacf1f",
      "name": "地址管理页",
      "description": "管理用户的收货地址",
      "componentPath": "AddressManagePage",
      "createdAt": "2025-03-04T10:16:05.414Z",
      "updatedAt": "2025-03-04T10:16:05.414Z"
    },
    {
      "id": "b8970870-670f-4560-acfc-04d93666c84d",
      "moduleId": "a6fc7cee-5bd6-4750-afc5-6d9dbf3f0be4",
      "name": "登录注册页",
      "description": "用户登录和注册功能，支持第三方登录和找回密码",
      "componentPath": "LoginRegisterPage",
      "createdAt": "2025-03-04T10:16:05.418Z",
      "updatedAt": "2025-03-04T10:16:05.418Z"
    }
  ],
  "components": [
    {
      "id": "5100c821-16a6-4f01-a48b-212899df6c54",
      "projectType": "campus-food-delivery",
      "componentName": "AddressManagePage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { FiChevronLeft, FiPlus, FiEdit2, FiTrash2, FiMapPin, FiCheck } from 'react-icons/fi';\r\n\r\nexport default function AddressManagePage() {\r\n  // 模拟地址数据\r\n  const [addresses, setAddresses] = useState([\r\n    {\r\n      id: 1,\r\n      name: '张同学',\r\n      phone: '138****1234',\r\n      address: '大学城第一宿舍楼 3号楼 507室',\r\n      isDefault: true,\r\n      tag: '宿舍'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: '张同学',\r\n      phone: '138****1234',\r\n      address: '大学城图书馆',\r\n      isDefault: false,\r\n      tag: '学校'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: '张同学',\r\n      phone: '138****1234',\r\n      address: '大学城第二食堂旁边',\r\n      isDefault: false,\r\n      tag: '食堂'\r\n    }\r\n  ]);\r\n  \r\n  // 是否显示新增/编辑地址表单\r\n  const [showForm, setShowForm] = useState(false);\r\n  \r\n  // 当前编辑的地址\r\n  const [currentAddress, setCurrentAddress] = useState<any>(null);\r\n  \r\n  // 表单数据\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    phone: '',\r\n    address: '',\r\n    tag: '宿舍',\r\n    isDefault: false\r\n  });\r\n  \r\n  // 可选标签\r\n  const tags = ['宿舍', '学校', '食堂', '公司', '家', '其他'];\r\n  \r\n  // 打开新增地址表单\r\n  const openAddForm = () => {\r\n    setCurrentAddress(null);\r\n    setFormData({\r\n      name: '',\r\n      phone: '',\r\n      address: '',\r\n      tag: '宿舍',\r\n      isDefault: false\r\n    });\r\n    setShowForm(true);\r\n  };\r\n  \r\n  // 打开编辑地址表单\r\n  const openEditForm = (address: any) => {\r\n    setCurrentAddress(address);\r\n    setFormData({\r\n      name: address.name,\r\n      phone: address.phone,\r\n      address: address.address,\r\n      tag: address.tag,\r\n      isDefault: address.isDefault\r\n    });\r\n    setShowForm(true);\r\n  };\r\n  \r\n  // 关闭表单\r\n  const closeForm = () => {\r\n    setShowForm(false);\r\n  };\r\n  \r\n  // 处理表单输入变化\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n  \r\n  // 处理复选框变化\r\n  const handleCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, checked } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: checked\r\n    }));\r\n  };\r\n  \r\n  // 处理标签选择\r\n  const handleTagSelect = (tag: string) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      tag\r\n    }));\r\n  };\r\n  \r\n  // 保存地址\r\n  const saveAddress = () => {\r\n    if (currentAddress) {\r\n      // 更新现有地址\r\n      setAddresses(prev => {\r\n        const newAddresses = prev.map(addr => {\r\n          if (addr.id === currentAddress.id) {\r\n            return {\r\n              ...addr,\r\n              ...formData\r\n            };\r\n          }\r\n          // 如果当前地址设为默认，其他地址取消默认\r\n          if (formData.isDefault && addr.id !== currentAddress.id) {\r\n            return {\r\n              ...addr,\r\n              isDefault: false\r\n            };\r\n          }\r\n          return addr;\r\n        });\r\n        return newAddresses;\r\n      });\r\n    } else {\r\n      // 添加新地址\r\n      const newAddress = {\r\n        id: Date.now(),\r\n        ...formData\r\n      };\r\n      \r\n      setAddresses(prev => {\r\n        // 如果新地址设为默认，其他地址取消默认\r\n        const updatedAddresses = formData.isDefault \r\n          ? prev.map(addr => ({ ...addr, isDefault: false }))\r\n          : [...prev];\r\n        \r\n        return [...updatedAddresses, newAddress];\r\n      });\r\n    }\r\n    \r\n    setShowForm(false);\r\n  };\r\n  \r\n  // 删除地址\r\n  const deleteAddress = (id: number) => {\r\n    setAddresses(prev => prev.filter(addr => addr.id !== id));\r\n  };\r\n  \r\n  // 设为默认地址\r\n  const setAsDefault = (id: number) => {\r\n    setAddresses(prev => \r\n      prev.map(addr => ({\r\n        ...addr,\r\n        isDefault: addr.id === id\r\n      }))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen max-w-md mx-auto bg-gray-50\">\r\n      {showForm ? (\r\n        // 地址表单\r\n        <>\r\n          {/* 表单顶部导航 */}\r\n          <div className=\"sticky top-0 bg-white p-4 shadow-sm z-10 flex items-center\">\r\n            <button className=\"mr-4\" onClick={closeForm}>\r\n              <FiChevronLeft className=\"text-gray-700\" size={24} />\r\n            </button>\r\n            <h1 className=\"text-lg font-semibold flex-1 text-center\">\r\n              {currentAddress ? '编辑地址' : '新增地址'}\r\n            </h1>\r\n            <div className=\"w-6\"></div>\r\n          </div>\r\n          \r\n          {/* 表单内容 */}\r\n          <div className=\"flex-1 overflow-auto p-4\">\r\n            <div className=\"bg-white rounded-lg shadow-sm p-4\">\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm text-gray-600 mb-1\">联系人</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={formData.name}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"请输入姓名\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded text-sm\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm text-gray-600 mb-1\">手机号码</label>\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"phone\"\r\n                  value={formData.phone}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"请输入手机号\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded text-sm\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm text-gray-600 mb-1\">详细地址</label>\r\n                <textarea\r\n                  name=\"address\"\r\n                  value={formData.address}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"请输入详细地址，如宿舍楼栋、房间号等\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded text-sm\"\r\n                  rows={3}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm text-gray-600 mb-2\">地址标签</label>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {tags.map(tag => (\r\n                    <button\r\n                      key={tag}\r\n                      className={`px-3 py-1 text-sm rounded-full ${\r\n                        formData.tag === tag \r\n                          ? 'bg-blue-500 text-white' \r\n                          : 'bg-gray-100 text-gray-600'\r\n                      }`}\r\n                      onClick={() => handleTagSelect(tag)}\r\n                    >\r\n                      {tag}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"mb-4\">\r\n                <label className=\"flex items-center\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"isDefault\"\r\n                    checked={formData.isDefault}\r\n                    onChange={handleCheckboxChange}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  <span className=\"text-sm text-gray-600\">设为默认地址</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* 保存按钮 */}\r\n          <div className=\"p-4 bg-white border-t border-gray-200\">\r\n            <button \r\n              className=\"w-full py-3 bg-blue-500 text-white rounded-lg font-medium\"\r\n              onClick={saveAddress}\r\n            >\r\n              保存\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        // 地址列表\r\n        <>\r\n          {/* 顶部导航 */}\r\n          <div className=\"sticky top-0 bg-white p-4 shadow-sm z-10 flex items-center\">\r\n            <button className=\"mr-4\">\r\n              <FiChevronLeft className=\"text-gray-700\" size={24} />\r\n            </button>\r\n            <h1 className=\"text-lg font-semibold flex-1 text-center\">收货地址</h1>\r\n            <div className=\"w-6\"></div>\r\n          </div>\r\n          \r\n          {/* 地址列表 */}\r\n          <div className=\"flex-1 overflow-auto p-4\">\r\n            {addresses.length > 0 ? (\r\n              <div className=\"space-y-4\">\r\n                {addresses.map(address => (\r\n                  <div key={address.id} className=\"bg-white rounded-lg shadow-sm p-4\">\r\n                    <div className=\"flex justify-between\">\r\n                      <div>\r\n                        <div className=\"flex items-center\">\r\n                          <span className=\"font-medium\">{address.name}</span>\r\n                          <span className=\"ml-3 text-gray-500\">{address.phone}</span>\r\n                          {address.isDefault && (\r\n                            <span className=\"ml-2 px-2 py-0.5 bg-blue-50 text-blue-500 text-xs rounded\">\r\n                              默认\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"flex items-start mt-2\">\r\n                          <FiMapPin className=\"text-gray-400 mt-0.5 mr-1 flex-shrink-0\" />\r\n                          <p className=\"text-gray-600 text-sm\">{address.address}</p>\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                          <span className=\"px-2 py-0.5 bg-gray-100 text-gray-600 text-xs rounded\">\r\n                            {address.tag}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex flex-col space-y-2\">\r\n                        <button \r\n                          className=\"text-gray-400\"\r\n                          onClick={() => openEditForm(address)}\r\n                        >\r\n                          <FiEdit2 size={16} />\r\n                        </button>\r\n                        <button \r\n                          className=\"text-gray-400\"\r\n                          onClick={() => deleteAddress(address.id)}\r\n                        >\r\n                          <FiTrash2 size={16} />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    {!address.isDefault && (\r\n                      <button \r\n                        className=\"mt-3 text-sm text-blue-500 flex items-center\"\r\n                        onClick={() => setAsDefault(address.id)}\r\n                      >\r\n                        <FiCheck className=\"mr-1\" size={14} />\r\n                        设为默认\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"flex flex-col items-center justify-center h-full\">\r\n                <div className=\"w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mb-4\">\r\n                  <FiMapPin className=\"text-gray-400\" size={32} />\r\n                </div>\r\n                <p className=\"text-gray-500\">暂无收货地址</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          {/* 添加地址按钮 */}\r\n          <div className=\"p-4 bg-white border-t border-gray-200\">\r\n            <button \r\n              className=\"w-full py-3 bg-blue-500 text-white rounded-lg font-medium flex items-center justify-center\"\r\n              onClick={openAddForm}\r\n            >\r\n              <FiPlus className=\"mr-1\" />\r\n              新增收货地址\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.702Z",
      "updatedAt": "2025-03-04T10:16:05.415Z"
    },
    {
      "id": "f6bb6d79-f5ea-459b-9883-e9aa515f502a",
      "projectType": "campus-food-delivery",
      "componentName": "CartPage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { FiChevronLeft, FiTrash2, FiPlus, FiMinus, FiShoppingBag } from 'react-icons/fi';\r\n\r\nexport default function CartPage() {\r\n  const [cartItems, setCartItems] = useState([\r\n    {\r\n      id: 1,\r\n      name: '黄焖鸡米饭',\r\n      price: 18,\r\n      quantity: 1,\r\n      image: 'https://images.unsplash.com/photo-1562967914-608f82629710?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      restaurant: {\r\n        id: 1,\r\n        name: '学生食堂',\r\n        deliveryFee: 3,\r\n        minOrder: 15\r\n      }\r\n    },\r\n    {\r\n      id: 2,\r\n      name: '可乐',\r\n      price: 5,\r\n      quantity: 1,\r\n      image: 'https://images.unsplash.com/photo-1581636625402-29b2a704ef13?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      restaurant: {\r\n        id: 1,\r\n        name: '学生食堂',\r\n        deliveryFee: 3,\r\n        minOrder: 15\r\n      }\r\n    },\r\n    {\r\n      id: 3,\r\n      name: '薯条',\r\n      price: 8,\r\n      quantity: 2,\r\n      image: 'https://images.unsplash.com/photo-1573080496219-bb080dd4f877?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      restaurant: {\r\n        id: 2,\r\n        name: '麦当劳校园店',\r\n        deliveryFee: 5,\r\n        minOrder: 20\r\n      }\r\n    }\r\n  ]);\r\n  \r\n  // 按餐厅分组购物车商品\r\n  const groupedItems = cartItems.reduce((groups, item) => {\r\n    const restaurantId = item.restaurant.id;\r\n    if (!groups[restaurantId]) {\r\n      groups[restaurantId] = {\r\n        restaurant: item.restaurant,\r\n        items: []\r\n      };\r\n    }\r\n    groups[restaurantId].items.push(item);\r\n    return groups;\r\n  }, {} as Record<number, { restaurant: any, items: typeof cartItems }>);\r\n  \r\n  // 计算餐厅商品总价\r\n  const calculateRestaurantTotal = (items: typeof cartItems) => {\r\n    return items.reduce((total, item) => total + item.price * item.quantity, 0);\r\n  };\r\n  \r\n  // 计算购物车总价\r\n  const calculateCartTotal = () => {\r\n    return Object.values(groupedItems).reduce((total, group) => {\r\n      return total + calculateRestaurantTotal(group.items) + group.restaurant.deliveryFee;\r\n    }, 0);\r\n  };\r\n  \r\n  // 增加商品数量\r\n  const increaseQuantity = (itemId: number) => {\r\n    setCartItems(prev => \r\n      prev.map(item => \r\n        item.id === itemId \r\n          ? { ...item, quantity: item.quantity + 1 } \r\n          : item\r\n      )\r\n    );\r\n  };\r\n  \r\n  // 减少商品数量\r\n  const decreaseQuantity = (itemId: number) => {\r\n    setCartItems(prev => \r\n      prev.map(item => \r\n        item.id === itemId && item.quantity > 1\r\n          ? { ...item, quantity: item.quantity - 1 } \r\n          : item\r\n      )\r\n    );\r\n  };\r\n  \r\n  // 移除商品\r\n  const removeItem = (itemId: number) => {\r\n    setCartItems(prev => prev.filter(item => item.id !== itemId));\r\n  };\r\n  \r\n  // 清空购物车\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen max-w-md mx-auto bg-gray-50\">\r\n      {/* 顶部导航 */}\r\n      <div className=\"sticky top-0 bg-white p-4 shadow-sm z-10 flex items-center\">\r\n        <button className=\"mr-4\">\r\n          <FiChevronLeft className=\"text-gray-700\" size={24} />\r\n        </button>\r\n        <h1 className=\"text-lg font-semibold flex-1 text-center\">购物车</h1>\r\n        {cartItems.length > 0 && (\r\n          <button \r\n            className=\"text-red-500 text-sm\"\r\n            onClick={clearCart}\r\n          >\r\n            清空\r\n          </button>\r\n        )}\r\n      </div>\r\n      \r\n      {/* 购物车内容 */}\r\n      <div className=\"flex-1 overflow-auto p-4\">\r\n        {cartItems.length > 0 ? (\r\n          <div className=\"space-y-6\">\r\n            {Object.values(groupedItems).map((group) => (\r\n              <div key={group.restaurant.id} className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\r\n                {/* 餐厅信息 */}\r\n                <div className=\"p-4 border-b border-gray-100\">\r\n                  <h3 className=\"font-semibold\">{group.restaurant.name}</h3>\r\n                  <p className=\"text-xs text-gray-500 mt-1\">\r\n                    配送费 ¥{group.restaurant.deliveryFee} | \r\n                    ¥{group.restaurant.minOrder}起送\r\n                  </p>\r\n                </div>\r\n                \r\n                {/* 餐厅商品列表 */}\r\n                <div>\r\n                  {group.items.map(item => (\r\n                    <div key={item.id} className=\"flex p-4 border-b border-gray-100 last:border-b-0\">\r\n                      <div className=\"w-16 h-16 rounded overflow-hidden mr-3\">\r\n                        <img \r\n                          src={item.image} \r\n                          alt={item.name} \r\n                          className=\"w-full h-full object-cover\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex justify-between\">\r\n                          <h4 className=\"font-medium\">{item.name}</h4>\r\n                          <button \r\n                            className=\"text-gray-400\"\r\n                            onClick={() => removeItem(item.id)}\r\n                          >\r\n                            <FiTrash2 size={16} />\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center mt-2\">\r\n                          <span className=\"text-red-500\">¥{item.price}</span>\r\n                          <div className=\"flex items-center\">\r\n                            <button \r\n                              className=\"w-6 h-6 bg-white border border-gray-300 rounded-full flex items-center justify-center\"\r\n                              onClick={() => decreaseQuantity(item.id)}\r\n                            >\r\n                              <FiMinus className=\"text-gray-500 text-xs\" />\r\n                            </button>\r\n                            <span className=\"mx-2 text-sm\">{item.quantity}</span>\r\n                            <button \r\n                              className=\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center\"\r\n                              onClick={() => increaseQuantity(item.id)}\r\n                            >\r\n                              <FiPlus className=\"text-white text-xs\" />\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                \r\n                {/* 餐厅小计 */}\r\n                <div className=\"p-3 bg-gray-50 text-sm\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-500\">商品小计</span>\r\n                    <span>¥{calculateRestaurantTotal(group.items).toFixed(2)}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between mt-1\">\r\n                    <span className=\"text-gray-500\">配送费</span>\r\n                    <span>¥{group.restaurant.deliveryFee.toFixed(2)}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex flex-col items-center justify-center h-full\">\r\n            <div className=\"w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mb-4\">\r\n              <FiShoppingBag className=\"text-gray-400\" size={32} />\r\n            </div>\r\n            <p className=\"text-gray-500\">购物车空空如也</p>\r\n            <button className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded-full text-sm\">\r\n              去逛逛\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* 底部结算栏 */}\r\n      {cartItems.length > 0 && (\r\n        <div className=\"sticky bottom-0 bg-white border-t border-gray-200 p-4 flex justify-between items-center\">\r\n          <div>\r\n            <div className=\"font-medium\">\r\n              <span className=\"text-gray-500 text-sm mr-1\">合计:</span>\r\n              <span className=\"text-red-500\">¥{calculateCartTotal().toFixed(2)}</span>\r\n            </div>\r\n            <div className=\"text-xs text-gray-500\">\r\n              含配送费\r\n            </div>\r\n          </div>\r\n          <button className=\"bg-blue-500 text-white px-6 py-2 rounded-full\">\r\n            去结算({cartItems.reduce((sum, item) => sum + item.quantity, 0)})\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.703Z",
      "updatedAt": "2025-03-04T10:16:05.379Z"
    },
    {
      "id": "0b29d672-c5fb-46e9-b2eb-c6e2a7fd40b0",
      "projectType": "campus-food-delivery",
      "componentName": "FavoritesPage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { FiChevronLeft, FiHeart, FiStar, FiClock, FiShoppingBag } from 'react-icons/fi';\r\n\r\nexport default function FavoritesPage() {\r\n  const [activeTab, setActiveTab] = useState('restaurants');\r\n  \r\n  // 选项卡\r\n  const tabs = [\r\n    { id: 'restaurants', label: '收藏的餐厅' },\r\n    { id: 'foods', label: '收藏的食品' }\r\n  ];\r\n  \r\n  // 模拟收藏的餐厅数据\r\n  const favoriteRestaurants = [\r\n    {\r\n      id: 1,\r\n      name: '学生食堂',\r\n      rating: 4.5,\r\n      deliveryTime: '15-25',\r\n      minOrder: 15,\r\n      image: 'https://images.unsplash.com/photo-1555396273-367ea4eb4db5?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      tags: ['中餐', '快餐', '米饭']\r\n    },\r\n    {\r\n      id: 2,\r\n      name: '麦当劳校园店',\r\n      rating: 4.3,\r\n      deliveryTime: '20-30',\r\n      minOrder: 20,\r\n      image: 'https://images.unsplash.com/photo-1552895638-f7fe08d2f7d5?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      tags: ['汉堡', '快餐', '炸鸡']\r\n    },\r\n    {\r\n      id: 3,\r\n      name: '星巴克校园店',\r\n      rating: 4.7,\r\n      deliveryTime: '15-20',\r\n      minOrder: 25,\r\n      image: 'https://images.unsplash.com/photo-1501339847302-ac426a4a7cbb?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      tags: ['咖啡', '甜点', '饮品']\r\n    }\r\n  ];\r\n  \r\n  // 模拟收藏的食品数据\r\n  const favoriteFoods = [\r\n    {\r\n      id: 1,\r\n      name: '黄焖鸡米饭',\r\n      price: 18,\r\n      image: 'https://images.unsplash.com/photo-1562967914-608f82629710?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      restaurant: '学生食堂',\r\n      rating: 4.8,\r\n      sales: 352\r\n    },\r\n    {\r\n      id: 2,\r\n      name: '巨无霸套餐',\r\n      price: 32,\r\n      image: 'https://images.unsplash.com/photo-1568901346375-23c9450c58cd?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      restaurant: '麦当劳校园店',\r\n      rating: 4.5,\r\n      sales: 289\r\n    },\r\n    {\r\n      id: 3,\r\n      name: '拿铁咖啡',\r\n      price: 28,\r\n      image: 'https://images.unsplash.com/photo-1541167760496-1628856ab772?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      restaurant: '星巴克校园店',\r\n      rating: 4.9,\r\n      sales: 456\r\n    },\r\n    {\r\n      id: 4,\r\n      name: '麻辣香锅',\r\n      price: 45,\r\n      image: 'https://images.unsplash.com/photo-1563379091339-03b21ab4a4f8?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      restaurant: '川湘小厨',\r\n      rating: 4.7,\r\n      sales: 189\r\n    }\r\n  ];\r\n  \r\n  // 移除收藏\r\n  const removeFromFavorites = (id: number, type: string) => {\r\n    // 实际应用中这里会调用API移除收藏\r\n    console.log(`从${type}收藏中移除ID为${id}的项目`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen max-w-md mx-auto bg-gray-50\">\r\n      {/* 顶部导航 */}\r\n      <div className=\"sticky top-0 bg-white p-4 shadow-sm z-10 flex items-center\">\r\n        <button className=\"mr-4\">\r\n          <FiChevronLeft className=\"text-gray-700\" size={24} />\r\n        </button>\r\n        <h1 className=\"text-lg font-semibold flex-1 text-center\">我的收藏</h1>\r\n        <div className=\"w-6\"></div> {/* 占位，保持标题居中 */}\r\n      </div>\r\n      \r\n      {/* 选项卡 */}\r\n      <div className=\"bg-white border-b border-gray-200\">\r\n        <div className=\"flex\">\r\n          {tabs.map(tab => (\r\n            <button\r\n              key={tab.id}\r\n              className={`flex-1 py-3 text-sm font-medium ${\r\n                activeTab === tab.id \r\n                  ? 'text-blue-500 border-b-2 border-blue-500' \r\n                  : 'text-gray-500'\r\n              }`}\r\n              onClick={() => setActiveTab(tab.id)}\r\n            >\r\n              {tab.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* 内容区域 */}\r\n      <div className=\"flex-1 overflow-auto p-4\">\r\n        {activeTab === 'restaurants' ? (\r\n          // 收藏的餐厅\r\n          <div className=\"space-y-4\">\r\n            {favoriteRestaurants.map(restaurant => (\r\n              <div key={restaurant.id} className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\r\n                <div className=\"flex\">\r\n                  <div className=\"w-24 h-24 overflow-hidden\">\r\n                    <img \r\n                      src={restaurant.image} \r\n                      alt={restaurant.name} \r\n                      className=\"w-full h-full object-cover\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex-1 p-3\">\r\n                    <div className=\"flex justify-between items-start\">\r\n                      <h3 className=\"font-semibold\">{restaurant.name}</h3>\r\n                      <button \r\n                        className=\"text-red-500\"\r\n                        onClick={() => removeFromFavorites(restaurant.id, 'restaurants')}\r\n                      >\r\n                        <FiHeart className=\"fill-current\" />\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"flex items-center text-xs text-gray-500 mt-1\">\r\n                      <span className=\"flex items-center\">\r\n                        <FiStar className=\"text-yellow-400 mr-1\" />\r\n                        {restaurant.rating}\r\n                      </span>\r\n                      <span className=\"mx-2\">|</span>\r\n                      <span className=\"flex items-center\">\r\n                        <FiClock className=\"mr-1\" />\r\n                        {restaurant.deliveryTime}分钟\r\n                      </span>\r\n                      <span className=\"mx-2\">|</span>\r\n                      <span>¥{restaurant.minOrder}起送</span>\r\n                    </div>\r\n                    <div className=\"flex flex-wrap mt-2\">\r\n                      {restaurant.tags.map((tag, index) => (\r\n                        <span key={index} className=\"text-xs bg-gray-100 text-gray-600 px-2 py-1 rounded mr-1 mb-1\">\r\n                          {tag}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                    <button className=\"mt-2 text-xs text-blue-500 border border-blue-500 rounded px-2 py-1\">\r\n                      去点餐\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          // 收藏的食品\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            {favoriteFoods.map(food => (\r\n              <div key={food.id} className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\r\n                <div className=\"h-32 overflow-hidden relative\">\r\n                  <img \r\n                    src={food.image} \r\n                    alt={food.name} \r\n                    className=\"w-full h-full object-cover\"\r\n                  />\r\n                  <button \r\n                    className=\"absolute top-2 right-2 w-7 h-7 bg-white/80 rounded-full flex items-center justify-center text-red-500\"\r\n                    onClick={() => removeFromFavorites(food.id, 'foods')}\r\n                  >\r\n                    <FiHeart className=\"fill-current\" />\r\n                  </button>\r\n                </div>\r\n                <div className=\"p-3\">\r\n                  <h3 className=\"font-medium text-sm\">{food.name}</h3>\r\n                  <p className=\"text-xs text-gray-500 mt-1\">{food.restaurant}</p>\r\n                  <div className=\"flex items-center justify-between mt-2\">\r\n                    <span className=\"text-red-500 font-medium\">¥{food.price}</span>\r\n                    <div className=\"flex items-center text-xs text-gray-500\">\r\n                      <FiStar className=\"text-yellow-400 mr-1\" />\r\n                      <span>{food.rating}</span>\r\n                      <span className=\"mx-1\">|</span>\r\n                      <span>月售{food.sales}</span>\r\n                    </div>\r\n                  </div>\r\n                  <button className=\"mt-2 w-full text-xs bg-blue-500 text-white rounded py-1 flex items-center justify-center\">\r\n                    <FiShoppingBag className=\"mr-1\" />\r\n                    加入购物车\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.704Z",
      "updatedAt": "2025-03-04T10:16:05.412Z"
    },
    {
      "id": "eef1064b-189d-40cc-a5f6-0a1ae5041ad5",
      "projectType": "campus-food-delivery",
      "componentName": "HomePage",
      "content": "'use client';\n\nimport { useState } from 'react';\nimport { FiSearch, FiHome, FiShoppingCart, FiUser, FiHeart } from 'react-icons/fi';\n\nexport default function HomePage() {\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  // 模拟餐厅数据\n  const restaurants = [\n    {\n      id: 1,\n      name: '学生食堂',\n      rating: 4.5,\n      deliveryTime: '15-25',\n      minOrder: 15,\n      image: 'https://images.unsplash.com/photo-1555396273-367ea4eb4db5?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\n      tags: ['中餐', '快餐', '米饭']\n    },\n    {\n      id: 2,\n      name: '麦当劳校园店',\n      rating: 4.3,\n      deliveryTime: '20-30',\n      minOrder: 20,\n      image: 'https://images.unsplash.com/photo-1552895638-f7fe08d2f7d5?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\n      tags: ['汉堡', '快餐', '炸鸡']\n    },\n    {\n      id: 3,\n      name: '星巴克校园店',\n      rating: 4.7,\n      deliveryTime: '15-20',\n      minOrder: 25,\n      image: 'https://images.unsplash.com/photo-1501339847302-ac426a4a7cbb?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\n      tags: ['咖啡', '甜点', '饮品']\n    },\n    {\n      id: 4,\n      name: '川湘小厨',\n      rating: 4.6,\n      deliveryTime: '25-35',\n      minOrder: 30,\n      image: 'https://images.unsplash.com/photo-1563245372-f21724e3856d?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\n      tags: ['川菜', '湘菜', '辣']\n    }\n  ];\n\n  // 过滤餐厅\n  const filteredRestaurants = restaurants.filter(restaurant => \n    restaurant.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    restaurant.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()))\n  );\n\n  return (\n    <div className=\"flex flex-col h-screen max-w-md mx-auto bg-gray-50\">\n      {/* 顶部搜索栏 */}\n      <div className=\"sticky top-0 bg-white p-4 shadow-sm z-10\">\n        <div className=\"flex items-center bg-gray-100 rounded-full p-2\">\n          <FiSearch className=\"text-gray-500 ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"搜索餐厅或美食...\"\n            className=\"bg-transparent border-none outline-none flex-1 ml-2 text-sm\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n          />\n        </div>\n      </div>\n\n      {/* 主要内容区 */}\n      <div className=\"flex-1 overflow-auto p-4\">\n        {/* 分类横向滚动 */}\n        <div className=\"mb-6\">\n          <h2 className=\"text-lg font-semibold mb-3\">美食分类</h2>\n          <div className=\"flex overflow-x-auto pb-2 -mx-1 hide-scrollbar\">\n            {['快餐', '中餐', '西餐', '奶茶', '甜点', '水果', '夜宵', '早餐'].map((category, index) => (\n              <div key={index} className=\"flex flex-col items-center mx-3 min-w-[60px]\">\n                <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mb-1\">\n                  <span className=\"text-blue-500 text-xs\">{category.charAt(0)}</span>\n                </div>\n                <span className=\"text-xs text-gray-700\">{category}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* 餐厅列表 */}\n        <div>\n          <h2 className=\"text-lg font-semibold mb-3\">附近餐厅</h2>\n          <div className=\"space-y-4\">\n            {filteredRestaurants.map(restaurant => (\n              <div key={restaurant.id} className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n                <div className=\"h-32 overflow-hidden\">\n                  <img \n                    src={restaurant.image} \n                    alt={restaurant.name} \n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n                <div className=\"p-3\">\n                  <div className=\"flex justify-between items-start\">\n                    <h3 className=\"font-semibold\">{restaurant.name}</h3>\n                    <div className=\"flex items-center bg-blue-50 px-2 py-1 rounded text-xs text-blue-600\">\n                      <span>{restaurant.rating}</span>\n                      <span className=\"ml-1\">⭐</span>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center text-xs text-gray-500 mt-1\">\n                    <span>{restaurant.deliveryTime}分钟</span>\n                    <span className=\"mx-1\">•</span>\n                    <span>¥{restaurant.minOrder}起送</span>\n                  </div>\n                  <div className=\"flex flex-wrap mt-2\">\n                    {restaurant.tags.map((tag, index) => (\n                      <span key={index} className=\"text-xs bg-gray-100 text-gray-600 px-2 py-1 rounded mr-1 mb-1\">\n                        {tag}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* 底部导航栏 */}\n      <div className=\"sticky bottom-0 bg-white border-t border-gray-200 flex justify-around py-2\">\n        <div className=\"flex flex-col items-center\">\n          <FiHome className=\"text-blue-500\" />\n          <span className=\"text-xs mt-1 text-blue-500\">首页</span>\n        </div>\n        <div className=\"flex flex-col items-center\">\n          <FiHeart className=\"text-gray-400\" />\n          <span className=\"text-xs mt-1 text-gray-500\">收藏</span>\n        </div>\n        <div className=\"flex flex-col items-center\">\n          <FiShoppingCart className=\"text-gray-400\" />\n          <span className=\"text-xs mt-1 text-gray-500\">购物车</span>\n        </div>\n        <div className=\"flex flex-col items-center\">\n          <FiUser className=\"text-gray-400\" />\n          <span className=\"text-xs mt-1 text-gray-500\">我的</span>\n        </div>\n      </div>\n    </div>\n  );\n} ",
      "createdAt": "2025-03-04T10:04:26.704Z",
      "updatedAt": "2025-03-04T10:16:05.371Z"
    },
    {
      "id": "324cd79b-6d4b-425c-a436-e5df8f7fea8c",
      "projectType": "campus-food-delivery",
      "componentName": "LoginRegisterPage",
      "content": " ",
      "createdAt": "2025-03-04T10:04:26.705Z",
      "updatedAt": "2025-03-04T10:16:05.420Z"
    },
    {
      "id": "6cba4a92-0206-4025-94cf-3606dc6483f3",
      "projectType": "campus-food-delivery",
      "componentName": "OrderHistoryPage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { FiChevronLeft, FiClock, FiMapPin, FiStar } from 'react-icons/fi';\r\n\r\nexport default function OrderHistoryPage() {\r\n  const [activeTab, setActiveTab] = useState('all');\r\n  \r\n  // 订单状态选项卡\r\n  const tabs = [\r\n    { id: 'all', label: '全部' },\r\n    { id: 'pending', label: '待付款' },\r\n    { id: 'processing', label: '配送中' },\r\n    { id: 'completed', label: '已完成' },\r\n    { id: 'cancelled', label: '已取消' }\r\n  ];\r\n  \r\n  // 模拟订单数据\r\n  const orders = [\r\n    {\r\n      id: 'SO12345678',\r\n      date: '2023-03-04 12:30',\r\n      status: 'completed',\r\n      statusText: '已完成',\r\n      restaurant: {\r\n        name: '学生食堂',\r\n        image: 'https://images.unsplash.com/photo-1555396273-367ea4eb4db5?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      },\r\n      items: [\r\n        { name: '黄焖鸡米饭', price: 18, quantity: 1 },\r\n        { name: '可乐', price: 5, quantity: 1 },\r\n      ],\r\n      total: 26,\r\n      isRated: true,\r\n      rating: 5\r\n    },\r\n    {\r\n      id: 'SO12345679',\r\n      date: '2023-03-03 18:45',\r\n      status: 'completed',\r\n      statusText: '已完成',\r\n      restaurant: {\r\n        name: '麦当劳校园店',\r\n        image: 'https://images.unsplash.com/photo-1552895638-f7fe08d2f7d5?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      },\r\n      items: [\r\n        { name: '巨无霸套餐', price: 32, quantity: 1 },\r\n        { name: '薯条', price: 8, quantity: 1 },\r\n      ],\r\n      total: 40,\r\n      isRated: true,\r\n      rating: 4\r\n    },\r\n    {\r\n      id: 'SO12345680',\r\n      date: '2023-03-03 12:15',\r\n      status: 'processing',\r\n      statusText: '配送中',\r\n      restaurant: {\r\n        name: '星巴克校园店',\r\n        image: 'https://images.unsplash.com/photo-1501339847302-ac426a4a7cbb?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      },\r\n      items: [\r\n        { name: '拿铁咖啡', price: 28, quantity: 1 },\r\n        { name: '提拉米苏', price: 22, quantity: 1 },\r\n      ],\r\n      total: 50,\r\n      isRated: false\r\n    },\r\n    {\r\n      id: 'SO12345681',\r\n      date: '2023-03-02 19:30',\r\n      status: 'pending',\r\n      statusText: '待付款',\r\n      restaurant: {\r\n        name: '川湘小厨',\r\n        image: 'https://images.unsplash.com/photo-1563245372-f21724e3856d?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      },\r\n      items: [\r\n        { name: '麻辣香锅', price: 45, quantity: 1 },\r\n        { name: '米饭', price: 2, quantity: 2 },\r\n      ],\r\n      total: 49,\r\n      isRated: false\r\n    },\r\n    {\r\n      id: 'SO12345682',\r\n      date: '2023-03-01 20:15',\r\n      status: 'cancelled',\r\n      statusText: '已取消',\r\n      restaurant: {\r\n        name: '学生食堂',\r\n        image: 'https://images.unsplash.com/photo-1555396273-367ea4eb4db5?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      },\r\n      items: [\r\n        { name: '红烧牛肉面', price: 16, quantity: 1 },\r\n      ],\r\n      total: 16,\r\n      isRated: false\r\n    }\r\n  ];\r\n  \r\n  // 根据当前选中的选项卡过滤订单\r\n  const filteredOrders = activeTab === 'all' \r\n    ? orders \r\n    : orders.filter(order => order.status === activeTab);\r\n  \r\n  // 获取订单状态对应的颜色\r\n  const getStatusColor = (status: string) => {\r\n    switch(status) {\r\n      case 'pending': return 'text-yellow-500';\r\n      case 'processing': return 'text-blue-500';\r\n      case 'completed': return 'text-green-500';\r\n      case 'cancelled': return 'text-gray-500';\r\n      default: return 'text-gray-700';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen max-w-md mx-auto bg-gray-50\">\r\n      {/* 顶部导航 */}\r\n      <div className=\"sticky top-0 bg-white p-4 shadow-sm z-10 flex items-center\">\r\n        <button className=\"mr-4\">\r\n          <FiChevronLeft className=\"text-gray-700\" size={24} />\r\n        </button>\r\n        <h1 className=\"text-lg font-semibold flex-1 text-center\">我的订单</h1>\r\n        <div className=\"w-6\"></div> {/* 占位，保持标题居中 */}\r\n      </div>\r\n      \r\n      {/* 订单状态选项卡 */}\r\n      <div className=\"bg-white border-b border-gray-200\">\r\n        <div className=\"flex overflow-x-auto hide-scrollbar\">\r\n          {tabs.map(tab => (\r\n            <button\r\n              key={tab.id}\r\n              className={`px-4 py-3 text-sm font-medium whitespace-nowrap ${\r\n                activeTab === tab.id \r\n                  ? 'text-blue-500 border-b-2 border-blue-500' \r\n                  : 'text-gray-500'\r\n              }`}\r\n              onClick={() => setActiveTab(tab.id)}\r\n            >\r\n              {tab.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* 订单列表 */}\r\n      <div className=\"flex-1 overflow-auto p-4\">\r\n        {filteredOrders.length > 0 ? (\r\n          <div className=\"space-y-4\">\r\n            {filteredOrders.map(order => (\r\n              <div key={order.id} className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\r\n                {/* 订单头部 */}\r\n                <div className=\"p-4 border-b border-gray-100 flex justify-between items-center\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-10 h-10 rounded overflow-hidden mr-3\">\r\n                      <img \r\n                        src={order.restaurant.image} \r\n                        alt={order.restaurant.name} \r\n                        className=\"w-full h-full object-cover\"\r\n                      />\r\n                    </div>\r\n                    <span className=\"font-medium\">{order.restaurant.name}</span>\r\n                  </div>\r\n                  <span className={getStatusColor(order.status)}>{order.statusText}</span>\r\n                </div>\r\n                \r\n                {/* 订单内容 */}\r\n                <div className=\"p-4\">\r\n                  {/* 订单商品 */}\r\n                  <div className=\"mb-3\">\r\n                    {order.items.map((item, index) => (\r\n                      <div key={index} className=\"flex justify-between text-sm mb-1\">\r\n                        <span className=\"text-gray-700\">{item.name} x{item.quantity}</span>\r\n                        <span className=\"text-gray-600\">¥{item.price * item.quantity}</span>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  \r\n                  {/* 订单信息 */}\r\n                  <div className=\"text-xs text-gray-500 space-y-1 mb-3\">\r\n                    <div className=\"flex items-center\">\r\n                      <FiClock className=\"mr-1\" />\r\n                      <span>下单时间: {order.date}</span>\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                      <FiMapPin className=\"mr-1\" />\r\n                      <span>配送至: 大学城第一宿舍楼 3号楼 507室</span>\r\n                    </div>\r\n                    {order.isRated && (\r\n                      <div className=\"flex items-center\">\r\n                        <FiStar className=\"mr-1 text-yellow-400\" />\r\n                        <span>我的评分: {order.rating}星</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  {/* 订单总价和操作按钮 */}\r\n                  <div className=\"flex justify-between items-center pt-3 border-t border-gray-100\">\r\n                    <div className=\"font-medium\">\r\n                      <span className=\"text-gray-500 text-sm mr-1\">合计:</span>\r\n                      <span className=\"text-red-500\">¥{order.total.toFixed(2)}</span>\r\n                    </div>\r\n                    <div className=\"flex space-x-2\">\r\n                      {order.status === 'completed' && !order.isRated && (\r\n                        <button className=\"px-3 py-1 text-sm border border-blue-500 text-blue-500 rounded\">\r\n                          评价\r\n                        </button>\r\n                      )}\r\n                      {order.status === 'completed' && (\r\n                        <button className=\"px-3 py-1 text-sm border border-blue-500 text-blue-500 rounded\">\r\n                          再来一单\r\n                        </button>\r\n                      )}\r\n                      {order.status === 'pending' && (\r\n                        <button className=\"px-3 py-1 text-sm bg-blue-500 text-white rounded\">\r\n                          去支付\r\n                        </button>\r\n                      )}\r\n                      {order.status === 'processing' && (\r\n                        <button className=\"px-3 py-1 text-sm border border-blue-500 text-blue-500 rounded\">\r\n                          查看配送\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex flex-col items-center justify-center h-full text-gray-500\">\r\n            <p>暂无订单</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.706Z",
      "updatedAt": "2025-03-04T10:16:05.393Z"
    },
    {
      "id": "45c9bb07-1577-4738-bc51-28a86344f692",
      "projectType": "campus-food-delivery",
      "componentName": "OrderPage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { FiChevronLeft, FiChevronRight, FiMapPin, FiClock, FiCreditCard, FiDollarSign } from 'react-icons/fi';\r\n\r\nexport default function OrderPage() {\r\n  const [paymentMethod, setPaymentMethod] = useState('微信支付');\r\n  \r\n  // 模拟订单数据\r\n  const order = {\r\n    id: 'SO12345678',\r\n    restaurant: {\r\n      name: '学生食堂',\r\n      image: 'https://images.unsplash.com/photo-1555396273-367ea4eb4db5?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n    },\r\n    items: [\r\n      { id: 1, name: '黄焖鸡米饭', price: 18, quantity: 1 },\r\n      { id: 2, name: '可乐', price: 5, quantity: 1 },\r\n    ],\r\n    subtotal: 23,\r\n    deliveryFee: 3,\r\n    total: 26,\r\n    address: {\r\n      name: '张同学',\r\n      phone: '138****1234',\r\n      address: '大学城第一宿舍楼 3号楼 507室',\r\n    },\r\n    estimatedTime: '30-40分钟',\r\n  };\r\n  \r\n  // 支付方式选项\r\n  const paymentOptions = ['微信支付', '支付宝', '校园卡', '到付'];\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen max-w-md mx-auto bg-gray-50\">\r\n      {/* 顶部导航 */}\r\n      <div className=\"sticky top-0 bg-white p-4 shadow-sm z-10 flex items-center\">\r\n        <button className=\"mr-4\">\r\n          <FiChevronLeft className=\"text-gray-700\" size={24} />\r\n        </button>\r\n        <h1 className=\"text-lg font-semibold flex-1 text-center\">确认订单</h1>\r\n        <div className=\"w-6\"></div> {/* 占位，保持标题居中 */}\r\n      </div>\r\n      \r\n      {/* 主要内容区 */}\r\n      <div className=\"flex-1 overflow-auto p-4 space-y-4\">\r\n        {/* 配送地址 */}\r\n        <div className=\"bg-white rounded-lg p-4 shadow-sm\">\r\n          <div className=\"flex items-start\">\r\n            <FiMapPin className=\"text-blue-500 mt-1 mr-3\" />\r\n            <div className=\"flex-1\">\r\n              <div className=\"flex justify-between\">\r\n                <div>\r\n                  <span className=\"font-medium\">{order.address.name}</span>\r\n                  <span className=\"ml-3 text-gray-500\">{order.address.phone}</span>\r\n                </div>\r\n              </div>\r\n              <p className=\"text-gray-600 mt-1\">{order.address.address}</p>\r\n            </div>\r\n            <FiChevronRight className=\"text-gray-400\" />\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 配送时间 */}\r\n        <div className=\"bg-white rounded-lg p-4 shadow-sm\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              <FiClock className=\"text-blue-500 mr-3\" />\r\n              <span>预计送达时间</span>\r\n            </div>\r\n            <div className=\"text-gray-600\">{order.estimatedTime}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 餐厅和商品信息 */}\r\n        <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\r\n          <div className=\"p-4 border-b border-gray-100 flex items-center\">\r\n            <div className=\"w-10 h-10 rounded overflow-hidden mr-3\">\r\n              <img \r\n                src={order.restaurant.image} \r\n                alt={order.restaurant.name} \r\n                className=\"w-full h-full object-cover\"\r\n              />\r\n            </div>\r\n            <span className=\"font-medium\">{order.restaurant.name}</span>\r\n          </div>\r\n          \r\n          <div className=\"p-4\">\r\n            {order.items.map(item => (\r\n              <div key={item.id} className=\"flex justify-between py-2\">\r\n                <div>\r\n                  <div className=\"font-medium\">{item.name}</div>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <div>x{item.quantity}</div>\r\n                  <div className=\"text-gray-600\">¥{item.price}</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            \r\n            <div className=\"border-t border-gray-100 mt-3 pt-3\">\r\n              <div className=\"flex justify-between text-gray-600 text-sm mb-1\">\r\n                <span>小计</span>\r\n                <span>¥{order.subtotal.toFixed(2)}</span>\r\n              </div>\r\n              <div className=\"flex justify-between text-gray-600 text-sm mb-1\">\r\n                <span>配送费</span>\r\n                <span>¥{order.deliveryFee.toFixed(2)}</span>\r\n              </div>\r\n              <div className=\"flex justify-between font-medium mt-2\">\r\n                <span>合计</span>\r\n                <span className=\"text-red-500\">¥{order.total.toFixed(2)}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 支付方式 */}\r\n        <div className=\"bg-white rounded-lg p-4 shadow-sm\">\r\n          <h3 className=\"font-medium mb-3 flex items-center\">\r\n            <FiCreditCard className=\"text-blue-500 mr-2\" />\r\n            支付方式\r\n          </h3>\r\n          <div className=\"space-y-2\">\r\n            {paymentOptions.map(option => (\r\n              <div \r\n                key={option}\r\n                className=\"flex items-center justify-between p-2 rounded border border-gray-200\"\r\n                onClick={() => setPaymentMethod(option)}\r\n              >\r\n                <span>{option}</span>\r\n                <div className=\"w-5 h-5 rounded-full border border-gray-300 flex items-center justify-center\">\r\n                  {paymentMethod === option && (\r\n                    <div className=\"w-3 h-3 rounded-full bg-blue-500\"></div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 备注 */}\r\n        <div className=\"bg-white rounded-lg p-4 shadow-sm\">\r\n          <h3 className=\"font-medium mb-2\">订单备注</h3>\r\n          <textarea \r\n            placeholder=\"请输入备注信息，如不要辣、多加米饭等\"\r\n            className=\"w-full border border-gray-200 rounded p-2 text-sm\"\r\n            rows={2}\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* 底部支付按钮 */}\r\n      <div className=\"sticky bottom-0 bg-white border-t border-gray-200 p-4 flex justify-between items-center\">\r\n        <div>\r\n          <span className=\"text-gray-600 mr-1\">实付:</span>\r\n          <span className=\"text-red-500 font-medium text-lg\">¥{order.total.toFixed(2)}</span>\r\n        </div>\r\n        <button className=\"bg-blue-500 text-white px-6 py-2 rounded-full flex items-center\">\r\n          <FiDollarSign className=\"mr-1\" />\r\n          <span>立即支付</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.706Z",
      "updatedAt": "2025-03-04T10:16:05.387Z"
    },
    {
      "id": "43a26ac8-5471-4a20-9d1b-bb51935ddac1",
      "projectType": "campus-food-delivery",
      "componentName": "ProfilePage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { \r\n  FiUser, FiHome, FiHeart, FiShoppingCart, \r\n  FiMapPin, FiCreditCard, FiSettings, FiHelpCircle, \r\n  FiFileText, FiChevronRight, FiLogOut, FiBell\r\n} from 'react-icons/fi';\r\n\r\nexport default function ProfilePage() {\r\n  // 模拟用户数据\r\n  const user = {\r\n    name: '张同学',\r\n    avatar: 'https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n    phone: '138****1234',\r\n    studentId: '2023110123',\r\n    balance: 128.5,\r\n    points: 350,\r\n    coupons: 3\r\n  };\r\n  \r\n  // 功能菜单项\r\n  const menuItems = [\r\n    {\r\n      id: 'orders',\r\n      title: '我的订单',\r\n      icon: <FiFileText className=\"text-blue-500\" />,\r\n      description: '查看历史订单'\r\n    },\r\n    {\r\n      id: 'address',\r\n      title: '收货地址',\r\n      icon: <FiMapPin className=\"text-green-500\" />,\r\n      description: '管理收货地址'\r\n    },\r\n    {\r\n      id: 'payment',\r\n      title: '支付方式',\r\n      icon: <FiCreditCard className=\"text-purple-500\" />,\r\n      description: '管理支付方式'\r\n    },\r\n    {\r\n      id: 'favorites',\r\n      title: '我的收藏',\r\n      icon: <FiHeart className=\"text-red-500\" />,\r\n      description: '查看收藏的餐厅和食品'\r\n    },\r\n    {\r\n      id: 'notifications',\r\n      title: '消息通知',\r\n      icon: <FiBell className=\"text-yellow-500\" />,\r\n      description: '订单和优惠通知'\r\n    },\r\n    {\r\n      id: 'settings',\r\n      title: '设置',\r\n      icon: <FiSettings className=\"text-gray-500\" />,\r\n      description: '账号和应用设置'\r\n    },\r\n    {\r\n      id: 'help',\r\n      title: '帮助中心',\r\n      icon: <FiHelpCircle className=\"text-teal-500\" />,\r\n      description: '常见问题和客服'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen max-w-md mx-auto bg-gray-50\">\r\n      {/* 顶部用户信息 */}\r\n      <div className=\"bg-blue-500 text-white p-6 pb-8 rounded-b-3xl\">\r\n        <h1 className=\"text-xl font-semibold mb-4\">个人中心</h1>\r\n        <div className=\"flex items-center\">\r\n          <div className=\"w-16 h-16 rounded-full overflow-hidden border-2 border-white\">\r\n            <img \r\n              src={user.avatar} \r\n              alt={user.name} \r\n              className=\"w-full h-full object-cover\"\r\n            />\r\n          </div>\r\n          <div className=\"ml-4\">\r\n            <h2 className=\"font-semibold text-lg\">{user.name}</h2>\r\n            <p className=\"text-blue-100 text-sm\">学号: {user.studentId}</p>\r\n            <p className=\"text-blue-100 text-sm\">手机: {user.phone}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* 账户信息卡片 */}\r\n      <div className=\"mx-4 -mt-4 bg-white rounded-lg shadow-md p-4\">\r\n        <div className=\"flex justify-between\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-gray-500 text-xs\">钱包余额</p>\r\n            <p className=\"font-semibold text-lg\">¥{user.balance}</p>\r\n          </div>\r\n          <div className=\"text-center border-l border-r border-gray-100 px-6\">\r\n            <p className=\"text-gray-500 text-xs\">积分</p>\r\n            <p className=\"font-semibold text-lg\">{user.points}</p>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <p className=\"text-gray-500 text-xs\">优惠券</p>\r\n            <p className=\"font-semibold text-lg\">{user.coupons}张</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* 功能菜单 */}\r\n      <div className=\"flex-1 overflow-auto p-4\">\r\n        <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\r\n          {menuItems.map((item, index) => (\r\n            <div \r\n              key={item.id}\r\n              className={`flex items-center justify-between p-4 ${\r\n                index < menuItems.length - 1 ? 'border-b border-gray-100' : ''\r\n              }`}\r\n            >\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-gray-50\">\r\n                  {item.icon}\r\n                </div>\r\n                <div className=\"ml-3\">\r\n                  <h3 className=\"font-medium\">{item.title}</h3>\r\n                  <p className=\"text-xs text-gray-500\">{item.description}</p>\r\n                </div>\r\n              </div>\r\n              <FiChevronRight className=\"text-gray-400\" />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        {/* 退出登录按钮 */}\r\n        <button className=\"mt-6 w-full py-3 flex items-center justify-center text-red-500 bg-white rounded-lg shadow-sm\">\r\n          <FiLogOut className=\"mr-2\" />\r\n          <span>退出登录</span>\r\n        </button>\r\n      </div>\r\n      \r\n      {/* 底部导航栏 */}\r\n      <div className=\"sticky bottom-0 bg-white border-t border-gray-200 flex justify-around py-2\">\r\n        <div className=\"flex flex-col items-center\">\r\n          <FiHome className=\"text-gray-400\" />\r\n          <span className=\"text-xs mt-1 text-gray-500\">首页</span>\r\n        </div>\r\n        <div className=\"flex flex-col items-center\">\r\n          <FiHeart className=\"text-gray-400\" />\r\n          <span className=\"text-xs mt-1 text-gray-500\">收藏</span>\r\n        </div>\r\n        <div className=\"flex flex-col items-center\">\r\n          <FiShoppingCart className=\"text-gray-400\" />\r\n          <span className=\"text-xs mt-1 text-gray-500\">购物车</span>\r\n        </div>\r\n        <div className=\"flex flex-col items-center\">\r\n          <FiUser className=\"text-blue-500\" />\r\n          <span className=\"text-xs mt-1 text-blue-500\">我的</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.707Z",
      "updatedAt": "2025-03-04T10:16:05.408Z"
    },
    {
      "id": "3deb87ac-b463-4fcf-9687-26f5b277d699",
      "projectType": "campus-food-delivery",
      "componentName": "RatingPage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { FiChevronLeft, FiCamera, FiX } from 'react-icons/fi';\r\n\r\nexport default function RatingPage() {\r\n  // 模拟订单数据\r\n  const order = {\r\n    id: 'SO12345678',\r\n    date: '2023-03-04 12:30',\r\n    restaurant: {\r\n      name: '学生食堂',\r\n      image: 'https://images.unsplash.com/photo-1555396273-367ea4eb4db5?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n    },\r\n    items: [\r\n      { id: 1, name: '黄焖鸡米饭', price: 18, quantity: 1 },\r\n      { id: 2, name: '可乐', price: 5, quantity: 1 },\r\n    ],\r\n    total: 26,\r\n    deliveryTime: 25\r\n  };\r\n  \r\n  // 评分和评价内容\r\n  const [rating, setRating] = useState(5);\r\n  const [comment, setComment] = useState('');\r\n  const [deliveryRating, setDeliveryRating] = useState(5);\r\n  const [anonymousReview, setAnonymousReview] = useState(false);\r\n  \r\n  // 常用评价标签\r\n  const commonTags = [\r\n    '菜品分量足',\r\n    '味道好',\r\n    '服务态度好',\r\n    '包装精美',\r\n    '送餐速度快',\r\n    '食材新鲜',\r\n    '性价比高',\r\n    '干净卫生'\r\n  ];\r\n  \r\n  // 已选标签\r\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\r\n  \r\n  // 上传的图片\r\n  const [images, setImages] = useState<string[]>([]);\r\n  \r\n  // 切换标签选择\r\n  const toggleTag = (tag: string) => {\r\n    if (selectedTags.includes(tag)) {\r\n      setSelectedTags(prev => prev.filter(t => t !== tag));\r\n    } else {\r\n      setSelectedTags(prev => [...prev, tag]);\r\n    }\r\n  };\r\n  \r\n  // 模拟上传图片\r\n  const uploadImage = () => {\r\n    // 实际应用中这里会调用文件选择器和上传API\r\n    // 这里仅作为演示，添加一个随机图片\r\n    const demoImages = [\r\n      'https://images.unsplash.com/photo-1562967914-608f82629710?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      'https://images.unsplash.com/photo-1563379091339-03b21ab4a4f8?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      'https://images.unsplash.com/photo-1555126634-323283e090fa?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\r\n    ];\r\n    \r\n    if (images.length < 3) {\r\n      const randomImage = demoImages[Math.floor(Math.random() * demoImages.length)];\r\n      setImages(prev => [...prev, randomImage]);\r\n    }\r\n  };\r\n  \r\n  // 移除图片\r\n  const removeImage = (index: number) => {\r\n    setImages(prev => prev.filter((_, i) => i !== index));\r\n  };\r\n  \r\n  // 提交评价\r\n  const submitReview = () => {\r\n    // 实际应用中这里会调用API提交评价\r\n    console.log({\r\n      orderId: order.id,\r\n      rating,\r\n      deliveryRating,\r\n      comment,\r\n      tags: selectedTags,\r\n      images,\r\n      anonymousReview\r\n    });\r\n    \r\n    // 模拟提交成功\r\n    alert('评价提交成功！');\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen max-w-md mx-auto bg-gray-50\">\r\n      {/* 顶部导航 */}\r\n      <div className=\"sticky top-0 bg-white p-4 shadow-sm z-10 flex items-center\">\r\n        <button className=\"mr-4\">\r\n          <FiChevronLeft className=\"text-gray-700\" size={24} />\r\n        </button>\r\n        <h1 className=\"text-lg font-semibold flex-1 text-center\">评价订单</h1>\r\n        <div className=\"w-6\"></div>\r\n      </div>\r\n      \r\n      {/* 评价内容 */}\r\n      <div className=\"flex-1 overflow-auto p-4\">\r\n        {/* 订单信息 */}\r\n        <div className=\"bg-white rounded-lg shadow-sm p-4 mb-4\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"w-12 h-12 rounded overflow-hidden mr-3\">\r\n              <img \r\n                src={order.restaurant.image} \r\n                alt={order.restaurant.name} \r\n                className=\"w-full h-full object-cover\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <h3 className=\"font-medium\">{order.restaurant.name}</h3>\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n                订单号: {order.id} | 下单时间: {order.date}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-3 pt-3 border-t border-gray-100\">\r\n            {order.items.map((item, index) => (\r\n              <div key={index} className=\"flex justify-between text-sm mb-1\">\r\n                <span>{item.name} x{item.quantity}</span>\r\n                <span className=\"text-gray-600\">¥{item.price * item.quantity}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 餐厅评分 */}\r\n        <div className=\"bg-white rounded-lg shadow-sm p-4 mb-4\">\r\n          <h3 className=\"font-medium mb-3\">餐厅评分</h3>\r\n          <div className=\"flex justify-center mb-4\">\r\n            {[1, 2, 3, 4, 5].map(star => (\r\n              <button \r\n                key={star}\r\n                className=\"mx-2 text-2xl\"\r\n                onClick={() => setRating(star)}\r\n              >\r\n                {star <= rating ? '★' : '☆'}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div className=\"text-center text-sm text-gray-500\">\r\n            {rating === 5 ? '非常满意' : \r\n             rating === 4 ? '满意' : \r\n             rating === 3 ? '一般' : \r\n             rating === 2 ? '不满意' : '非常不满意'}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 配送评分 */}\r\n        <div className=\"bg-white rounded-lg shadow-sm p-4 mb-4\">\r\n          <h3 className=\"font-medium mb-3\">配送评分</h3>\r\n          <p className=\"text-sm text-gray-500 mb-3\">\r\n            本次配送用时 {order.deliveryTime} 分钟\r\n          </p>\r\n          <div className=\"flex justify-center mb-4\">\r\n            {[1, 2, 3, 4, 5].map(star => (\r\n              <button \r\n                key={star}\r\n                className=\"mx-2 text-2xl\"\r\n                onClick={() => setDeliveryRating(star)}\r\n              >\r\n                {star <= deliveryRating ? '★' : '☆'}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div className=\"text-center text-sm text-gray-500\">\r\n            {deliveryRating === 5 ? '非常满意' : \r\n             deliveryRating === 4 ? '满意' : \r\n             deliveryRating === 3 ? '一般' : \r\n             deliveryRating === 2 ? '不满意' : '非常不满意'}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 评价标签 */}\r\n        <div className=\"bg-white rounded-lg shadow-sm p-4 mb-4\">\r\n          <h3 className=\"font-medium mb-3\">评价标签</h3>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {commonTags.map(tag => (\r\n              <button\r\n                key={tag}\r\n                className={`px-3 py-1 text-sm rounded-full ${\r\n                  selectedTags.includes(tag) \r\n                    ? 'bg-blue-500 text-white' \r\n                    : 'bg-gray-100 text-gray-600'\r\n                }`}\r\n                onClick={() => toggleTag(tag)}\r\n              >\r\n                {tag}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 评价内容 */}\r\n        <div className=\"bg-white rounded-lg shadow-sm p-4 mb-4\">\r\n          <h3 className=\"font-medium mb-3\">评价内容</h3>\r\n          <textarea\r\n            value={comment}\r\n            onChange={(e) => setComment(e.target.value)}\r\n            placeholder=\"请分享您的用餐体验，您的评价将帮助其他同学选择...\"\r\n            className=\"w-full p-3 border border-gray-300 rounded text-sm\"\r\n            rows={4}\r\n          />\r\n          \r\n          {/* 上传图片 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"flex items-center flex-wrap gap-3\">\r\n              {images.map((image, index) => (\r\n                <div key={index} className=\"relative w-20 h-20 rounded overflow-hidden\">\r\n                  <img \r\n                    src={image} \r\n                    alt={`评价图片${index + 1}`} \r\n                    className=\"w-full h-full object-cover\"\r\n                  />\r\n                  <button \r\n                    className=\"absolute top-1 right-1 w-5 h-5 bg-black/50 rounded-full flex items-center justify-center text-white\"\r\n                    onClick={() => removeImage(index)}\r\n                  >\r\n                    <FiX size={12} />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n              \r\n              {images.length < 3 && (\r\n                <button \r\n                  className=\"w-20 h-20 border border-dashed border-gray-300 rounded flex flex-col items-center justify-center text-gray-400\"\r\n                  onClick={uploadImage}\r\n                >\r\n                  <FiCamera size={20} />\r\n                  <span className=\"text-xs mt-1\">添加图片</span>\r\n                </button>\r\n              )}\r\n            </div>\r\n            <p className=\"text-xs text-gray-500 mt-2\">\r\n              最多上传3张图片\r\n            </p>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 匿名评价 */}\r\n        <div className=\"bg-white rounded-lg shadow-sm p-4 mb-4\">\r\n          <label className=\"flex items-center\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={anonymousReview}\r\n              onChange={(e) => setAnonymousReview(e.target.checked)}\r\n              className=\"mr-2\"\r\n            />\r\n            <span className=\"text-sm text-gray-600\">匿名评价</span>\r\n          </label>\r\n          <p className=\"text-xs text-gray-500 mt-2\">\r\n            开启后，您的评价将以匿名形式展示\r\n          </p>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* 提交按钮 */}\r\n      <div className=\"p-4 bg-white border-t border-gray-200\">\r\n        <button \r\n          className=\"w-full py-3 bg-blue-500 text-white rounded-lg font-medium\"\r\n          onClick={submitReview}\r\n        >\r\n          提交评价\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.708Z",
      "updatedAt": "2025-03-04T10:16:05.399Z"
    },
    {
      "id": "1bd47fe6-aa7d-4ea7-bf7d-290e05010380",
      "projectType": "campus-food-delivery",
      "componentName": "RestaurantDetailPage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { FiChevronLeft, FiHeart, FiShare2, FiShoppingCart, FiPlus, FiMinus } from 'react-icons/fi';\r\n\r\nexport default function RestaurantDetailPage() {\r\n  const [activeCategory, setActiveCategory] = useState('热销');\r\n  const [cart, setCart] = useState<{[key: string]: number}>({});\r\n  \r\n  // 模拟餐厅数据\r\n  const restaurant = {\r\n    id: 1,\r\n    name: '学生食堂',\r\n    rating: 4.5,\r\n    deliveryTime: '15-25',\r\n    minOrder: 15,\r\n    deliveryFee: 3,\r\n    image: 'https://images.unsplash.com/photo-1555396273-367ea4eb4db5?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n    notice: '欢迎光临学生食堂！我们提供新鲜健康的校园美食，配送时间约15-25分钟。',\r\n    categories: ['热销', '套餐', '主食', '小吃', '饮料', '水果']\r\n  };\r\n  \r\n  // 模拟菜品数据\r\n  const menuItems = [\r\n    {\r\n      id: '1',\r\n      name: '黄焖鸡米饭',\r\n      price: 18,\r\n      image: 'https://images.unsplash.com/photo-1562967914-608f82629710?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      sales: 352,\r\n      category: '热销',\r\n      description: '选用新鲜鸡腿肉，配以土豆、香菇等食材，黄焖入味，搭配米饭'\r\n    },\r\n    {\r\n      id: '2',\r\n      name: '红烧牛肉面',\r\n      price: 16,\r\n      image: 'https://images.unsplash.com/photo-1555126634-323283e090fa?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      sales: 215,\r\n      category: '热销',\r\n      description: '精选牛腩肉，慢炖三小时，汤底浓郁，面条劲道'\r\n    },\r\n    {\r\n      id: '3',\r\n      name: '麻辣香锅',\r\n      price: 22,\r\n      image: 'https://images.unsplash.com/photo-1563379091339-03b21ab4a4f8?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      sales: 189,\r\n      category: '热销',\r\n      description: '麻辣鲜香，食材丰富，可选辣度'\r\n    },\r\n    {\r\n      id: '4',\r\n      name: '经典套餐A',\r\n      price: 25,\r\n      image: 'https://images.unsplash.com/photo-1546069901-ba9599a7e63c?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      sales: 120,\r\n      category: '套餐',\r\n      description: '主食+荤菜+素菜+饮料，营养均衡'\r\n    },\r\n    {\r\n      id: '5',\r\n      name: '米饭',\r\n      price: 2,\r\n      image: 'https://images.unsplash.com/photo-1516684732162-798a0062be99?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      sales: 500,\r\n      category: '主食',\r\n      description: '东北大米，香软可口'\r\n    },\r\n    {\r\n      id: '6',\r\n      name: '薯条',\r\n      price: 8,\r\n      image: 'https://images.unsplash.com/photo-1573080496219-bb080dd4f877?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      sales: 320,\r\n      category: '小吃',\r\n      description: '现炸薯条，外酥里嫩'\r\n    },\r\n    {\r\n      id: '7',\r\n      name: '可乐',\r\n      price: 5,\r\n      image: 'https://images.unsplash.com/photo-1581636625402-29b2a704ef13?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n      sales: 450,\r\n      category: '饮料',\r\n      description: '冰镇可乐，提神解渴'\r\n    }\r\n  ];\r\n  \r\n  // 根据当前选中的分类过滤菜品\r\n  const filteredItems = menuItems.filter(item => item.category === activeCategory);\r\n  \r\n  // 计算购物车总价\r\n  const totalPrice = Object.entries(cart).reduce((total, [itemId, quantity]) => {\r\n    const item = menuItems.find(item => item.id === itemId);\r\n    return total + (item ? item.price * quantity : 0);\r\n  }, 0);\r\n  \r\n  // 计算购物车总数量\r\n  const totalItems = Object.values(cart).reduce((sum, quantity) => sum + quantity, 0);\r\n  \r\n  // 添加商品到购物车\r\n  const addToCart = (itemId: string) => {\r\n    setCart(prev => ({\r\n      ...prev,\r\n      [itemId]: (prev[itemId] || 0) + 1\r\n    }));\r\n  };\r\n  \r\n  // 从购物车移除商品\r\n  const removeFromCart = (itemId: string) => {\r\n    setCart(prev => {\r\n      const newCart = { ...prev };\r\n      if (newCart[itemId] > 1) {\r\n        newCart[itemId] -= 1;\r\n      } else {\r\n        delete newCart[itemId];\r\n      }\r\n      return newCart;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen max-w-md mx-auto bg-gray-50\">\r\n      {/* 餐厅封面 */}\r\n      <div className=\"relative h-48\">\r\n        <img \r\n          src={restaurant.image} \r\n          alt={restaurant.name} \r\n          className=\"w-full h-full object-cover\"\r\n        />\r\n        <div className=\"absolute top-0 left-0 right-0 p-4 flex justify-between items-center\">\r\n          <button className=\"w-8 h-8 bg-white/80 rounded-full flex items-center justify-center\">\r\n            <FiChevronLeft className=\"text-gray-700\" />\r\n          </button>\r\n          <div className=\"flex space-x-2\">\r\n            <button className=\"w-8 h-8 bg-white/80 rounded-full flex items-center justify-center\">\r\n              <FiShare2 className=\"text-gray-700\" />\r\n            </button>\r\n            <button className=\"w-8 h-8 bg-white/80 rounded-full flex items-center justify-center\">\r\n              <FiHeart className=\"text-gray-700\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* 餐厅信息 */}\r\n      <div className=\"bg-white p-4 shadow-sm\">\r\n        <h1 className=\"text-xl font-bold\">{restaurant.name}</h1>\r\n        <div className=\"flex items-center text-sm text-gray-500 mt-1\">\r\n          <span className=\"flex items-center\">\r\n            <span>{restaurant.rating}</span>\r\n            <span className=\"ml-1\">⭐</span>\r\n          </span>\r\n          <span className=\"mx-2\">|</span>\r\n          <span>月售1000+</span>\r\n          <span className=\"mx-2\">|</span>\r\n          <span>{restaurant.deliveryTime}分钟</span>\r\n        </div>\r\n        <div className=\"mt-2 text-sm bg-gray-50 p-2 rounded text-gray-600\">\r\n          {restaurant.notice}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* 菜单区域 */}\r\n      <div className=\"flex-1 flex overflow-hidden\">\r\n        {/* 左侧分类列表 */}\r\n        <div className=\"w-24 bg-gray-50 overflow-y-auto\">\r\n          {restaurant.categories.map(category => (\r\n            <div \r\n              key={category}\r\n              className={`py-3 px-2 text-center text-sm ${activeCategory === category ? 'bg-white text-blue-500 font-medium' : 'text-gray-600'}`}\r\n              onClick={() => setActiveCategory(category)}\r\n            >\r\n              {category}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        {/* 右侧菜品列表 */}\r\n        <div className=\"flex-1 overflow-y-auto bg-white\">\r\n          <div className=\"p-3\">\r\n            <h2 className=\"text-lg font-semibold mb-3\">{activeCategory}</h2>\r\n            <div className=\"space-y-4\">\r\n              {filteredItems.map(item => (\r\n                <div key={item.id} className=\"flex border-b border-gray-100 pb-3\">\r\n                  <div className=\"w-20 h-20 rounded overflow-hidden mr-3\">\r\n                    <img \r\n                      src={item.image} \r\n                      alt={item.name} \r\n                      className=\"w-full h-full object-cover\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <h3 className=\"font-medium\">{item.name}</h3>\r\n                    <p className=\"text-xs text-gray-500 mt-1 line-clamp-2\">{item.description}</p>\r\n                    <p className=\"text-xs text-gray-400 mt-1\">月售{item.sales}</p>\r\n                    <div className=\"flex justify-between items-center mt-2\">\r\n                      <span className=\"text-red-500 font-medium\">¥{item.price}</span>\r\n                      <div className=\"flex items-center\">\r\n                        {cart[item.id] ? (\r\n                          <>\r\n                            <button \r\n                              className=\"w-6 h-6 bg-white border border-gray-300 rounded-full flex items-center justify-center\"\r\n                              onClick={() => removeFromCart(item.id)}\r\n                            >\r\n                              <FiMinus className=\"text-gray-500 text-xs\" />\r\n                            </button>\r\n                            <span className=\"mx-2 text-sm\">{cart[item.id]}</span>\r\n                          </>\r\n                        ) : null}\r\n                        <button \r\n                          className=\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center\"\r\n                          onClick={() => addToCart(item.id)}\r\n                        >\r\n                          <FiPlus className=\"text-white text-xs\" />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* 底部购物车 */}\r\n      {totalItems > 0 && (\r\n        <div className=\"sticky bottom-0 bg-white border-t border-gray-200 p-3 flex justify-between items-center\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"relative\">\r\n              <FiShoppingCart className=\"text-blue-500 text-xl\" />\r\n              <span className=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full w-4 h-4 flex items-center justify-center\">\r\n                {totalItems}\r\n              </span>\r\n            </div>\r\n            <div className=\"ml-3\">\r\n              <div className=\"font-medium\">¥{totalPrice.toFixed(2)}</div>\r\n              <div className=\"text-xs text-gray-500\">另需配送费¥{restaurant.deliveryFee}</div>\r\n            </div>\r\n          </div>\r\n          <button \r\n            className={`px-4 py-2 rounded-full text-white text-sm ${totalPrice >= restaurant.minOrder ? 'bg-blue-500' : 'bg-gray-300'}`}\r\n            disabled={totalPrice < restaurant.minOrder}\r\n          >\r\n            {totalPrice >= restaurant.minOrder ? '去结算' : `差¥${(restaurant.minOrder - totalPrice).toFixed(2)}起送`}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.709Z",
      "updatedAt": "2025-03-04T10:16:05.376Z"
    },
    {
      "id": "51b18ba5-83a9-4987-b5a3-bb75ddd6f16b",
      "projectType": "product",
      "componentName": "ProductListPage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\n\r\ninterface Product {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  category: string;\r\n  image: string;\r\n}\r\n\r\nconst initialProducts: Product[] = [\r\n  {\r\n    id: 1,\r\n    name: '智能手机 Pro',\r\n    price: 4999,\r\n    category: '电子产品',\r\n    image: 'https://placehold.co/200x200/e2e8f0/1e293b?text=手机'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '超薄笔记本电脑',\r\n    price: 6999,\r\n    category: '电子产品',\r\n    image: 'https://placehold.co/200x200/e2e8f0/1e293b?text=笔记本'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '无线耳机',\r\n    price: 999,\r\n    category: '配件',\r\n    image: 'https://placehold.co/200x200/e2e8f0/1e293b?text=耳机'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '智能手表',\r\n    price: 1599,\r\n    category: '配件',\r\n    image: 'https://placehold.co/200x200/e2e8f0/1e293b?text=手表'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '平板电脑',\r\n    price: 3299,\r\n    category: '电子产品',\r\n    image: 'https://placehold.co/200x200/e2e8f0/1e293b?text=平板'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: '智能音箱',\r\n    price: 499,\r\n    category: '家居',\r\n    image: 'https://placehold.co/200x200/e2e8f0/1e293b?text=音箱'\r\n  }\r\n];\r\n\r\nexport default function ProductListPage() {\r\n  const [products, setProducts] = useState<Product[]>(initialProducts);\r\n  const [selectedCategory, setSelectedCategory] = useState<string>('全部');\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n\r\n  const categories = ['全部', '电子产品', '配件', '家居'];\r\n\r\n  const filteredProducts = products.filter(product => {\r\n    const matchesCategory = selectedCategory === '全部' || product.category === selectedCategory;\r\n    const matchesSearch = product.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n    return matchesCategory && matchesSearch;\r\n  });\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">商品列表</h2>\r\n      \r\n      <div className=\"flex flex-col md:flex-row justify-between mb-6\">\r\n        <div className=\"flex space-x-2 mb-4 md:mb-0\">\r\n          {categories.map(category => (\r\n            <button\r\n              key={category}\r\n              className={`px-4 py-2 rounded-md ${\r\n                selectedCategory === category\r\n                  ? 'bg-blue-500 text-white'\r\n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n              }`}\r\n              onClick={() => setSelectedCategory(category)}\r\n            >\r\n              {category}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        \r\n        <div className=\"relative\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"搜索商品...\"\r\n            className=\"w-full md:w-64 px-4 py-2 border rounded-md\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\r\n        {filteredProducts.map(product => (\r\n          <div key={product.id} className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n            <div className=\"h-48 w-full bg-gray-200 flex items-center justify-center\">\r\n              <img\r\n                src={product.image}\r\n                alt={product.name}\r\n                className=\"h-full w-full object-cover\"\r\n              />\r\n            </div>\r\n            <div className=\"p-4\">\r\n              <h3 className=\"text-lg font-semibold text-gray-800\">{product.name}</h3>\r\n              <div className=\"flex justify-between items-center mt-2\">\r\n                <span className=\"text-red-600 font-bold\">¥{product.price}</span>\r\n                <span className=\"text-sm text-gray-500\">{product.category}</span>\r\n              </div>\r\n              <button className=\"mt-4 w-full bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded\">\r\n                加入购物车\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      {filteredProducts.length === 0 && (\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-gray-500\">没有找到匹配的商品</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.710Z",
      "updatedAt": "2025-03-04T10:04:26.710Z"
    },
    {
      "id": "c2a83de2-94b3-41de-b374-3391c10a066c",
      "projectType": "user-auth",
      "componentName": "LoginPage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!email || !password) {\r\n      setError('请填写所有字段');\r\n      return;\r\n    }\r\n    setError('');\r\n    alert(`登录成功！邮箱: ${email}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-8 rounded-lg shadow-md\" style={{ width: '100%', maxWidth: 'none' }}>\r\n      <h2 className=\"text-2xl font-bold text-center text-gray-800 mb-6\">用户登录</h2>\r\n      \r\n      {error && (\r\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\r\n            邮箱\r\n          </label>\r\n          <input\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"请输入邮箱\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"mb-6\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n            密码\r\n          </label>\r\n          <input\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"请输入密码\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"flex items-center justify-between\">\r\n          <button\r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n            type=\"submit\"\r\n          >\r\n            登录\r\n          </button>\r\n          <a className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\" href=\"#\">\r\n            忘记密码?\r\n          </a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.711Z",
      "updatedAt": "2025-03-04T10:04:26.711Z"
    },
    {
      "id": "57366d31-8bc4-4a77-84c8-d7abac170ac0",
      "projectType": "user-auth",
      "componentName": "RegisterPage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\n\r\nexport default function RegisterPage() {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const { username, email, password, confirmPassword } = formData;\r\n    \r\n    if (!username || !email || !password || !confirmPassword) {\r\n      setError('请填写所有字段');\r\n      return;\r\n    }\r\n    \r\n    if (password !== confirmPassword) {\r\n      setError('两次输入的密码不一致');\r\n      return;\r\n    }\r\n    \r\n    setError('');\r\n    alert(`注册成功！用户名: ${username}, 邮箱: ${email}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto bg-white p-8 rounded-lg shadow-md\">\r\n      <h2 className=\"text-2xl font-bold text-center text-gray-800 mb-6\">用户注册</h2>\r\n      \r\n      {error && (\r\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n            用户名\r\n          </label>\r\n          <input\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            id=\"username\"\r\n            name=\"username\"\r\n            type=\"text\"\r\n            placeholder=\"请输入用户名\"\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\r\n            邮箱\r\n          </label>\r\n          <input\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"请输入邮箱\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n            密码\r\n          </label>\r\n          <input\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"请输入密码\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"mb-6\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"confirmPassword\">\r\n            确认密码\r\n          </label>\r\n          <input\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n            placeholder=\"请再次输入密码\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"flex items-center justify-between\">\r\n          <button\r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n            type=\"submit\"\r\n          >\r\n            注册\r\n          </button>\r\n          <a className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\" href=\"#\">\r\n            已有账号?\r\n          </a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.712Z",
      "updatedAt": "2025-03-04T10:04:26.712Z"
    },
    {
      "id": "924f998f-3ade-4138-8f9a-d77c67f360be",
      "projectType": "video-generation",
      "componentName": "MusicListPage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { FiMusic, FiSearch, FiFilter, FiPlus, FiTrash2, FiEdit, FiPlay, FiPause } from 'react-icons/fi';\r\n\r\n// 模拟数据\r\nconst mockMusic = [\r\n  { id: 1, title: '轻松愉快', description: '适合产品展示和介绍视频', duration: '2:45', category: '欢快', dateAdded: '2023-10-15' },\r\n  { id: 2, title: '科技感十足', description: '适合科技产品和创新主题', duration: '3:12', category: '科技', dateAdded: '2023-10-14' },\r\n  { id: 3, title: '舒缓背景乐', description: '适合叙事和解说视频', duration: '4:05', category: '舒缓', dateAdded: '2023-10-13' },\r\n  { id: 4, title: '激励人心', description: '适合励志和成功故事', duration: '2:58', category: '激励', dateAdded: '2023-10-12' },\r\n  { id: 5, title: '企业商务', description: '适合企业宣传和商务介绍', duration: '3:30', category: '商务', dateAdded: '2023-10-11' },\r\n  { id: 6, title: '自然氛围', description: '适合自然和环保主题', duration: '3:45', category: '自然', dateAdded: '2023-10-10' },\r\n];\r\n\r\nexport default function MusicListPage() {\r\n  const [music, setMusic] = useState(mockMusic);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterCategory, setFilterCategory] = useState<string>('all');\r\n  const [selectedMusic, setSelectedMusic] = useState<number[]>([]);\r\n  const [playingId, setPlayingId] = useState<number | null>(null);\r\n\r\n  // 获取所有分类\r\n  const categories = ['all', ...Array.from(new Set(music.map(item => item.category)))];\r\n\r\n  // 过滤音乐\r\n  const filteredMusic = music.filter(item => {\r\n    const matchesSearch = item.title.toLowerCase().includes(searchTerm.toLowerCase()) || \r\n                         item.description.toLowerCase().includes(searchTerm.toLowerCase());\r\n    \r\n    const matchesCategory = filterCategory === 'all' || item.category === filterCategory;\r\n    \r\n    return matchesSearch && matchesCategory;\r\n  });\r\n\r\n  // 选择/取消选择音乐\r\n  const toggleMusicSelection = (id: number) => {\r\n    setSelectedMusic(prev => \r\n      prev.includes(id) \r\n        ? prev.filter(musicId => musicId !== id)\r\n        : [...prev, id]\r\n    );\r\n  };\r\n\r\n  // 删除选中的音乐\r\n  const deleteSelectedMusic = () => {\r\n    setMusic(prev => prev.filter(item => !selectedMusic.includes(item.id)));\r\n    setSelectedMusic([]);\r\n  };\r\n\r\n  // 播放/暂停音乐\r\n  const togglePlay = (id: number) => {\r\n    setPlayingId(playingId === id ? null : id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-sm w-full max-w-6xl mx-auto\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold text-gray-800\">背景音乐库</h1>\r\n        <div className=\"flex space-x-2\">\r\n          <button \r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center\"\r\n            onClick={() => {/* 导航到添加音乐页面 */}}\r\n          >\r\n            <FiPlus className=\"mr-2\" />\r\n            添加音乐\r\n          </button>\r\n          {selectedMusic.length > 0 && (\r\n            <button \r\n              className=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 flex items-center\"\r\n              onClick={deleteSelectedMusic}\r\n            >\r\n              <FiTrash2 className=\"mr-2\" />\r\n              删除所选 ({selectedMusic.length})\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-4 mb-6\">\r\n        <div className=\"relative flex-grow\">\r\n          <FiSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\r\n          <input\r\n            type=\"text\"\r\n            className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            placeholder=\"搜索音乐...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"flex space-x-2 overflow-x-auto pb-2\">\r\n          {categories.map(category => (\r\n            <button \r\n              key={category}\r\n              className={`px-4 py-2 rounded-md whitespace-nowrap ${\r\n                filterCategory === category \r\n                  ? 'bg-blue-600 text-white' \r\n                  : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\r\n              }`}\r\n              onClick={() => setFilterCategory(category)}\r\n            >\r\n              {category === 'all' ? '全部' : category}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"overflow-hidden border rounded-lg\">\r\n        <table className=\"min-w-full divide-y divide-gray-200\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                音乐\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                分类\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                时长\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                添加日期\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                操作\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {filteredMusic.map(item => (\r\n              <tr \r\n                key={item.id}\r\n                className={`hover:bg-gray-50 ${selectedMusic.includes(item.id) ? 'bg-blue-50' : ''}`}\r\n                onClick={() => toggleMusicSelection(item.id)}\r\n              >\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div className=\"flex items-center\">\r\n                    <button \r\n                      className=\"mr-3 p-2 rounded-full bg-gray-100 hover:bg-gray-200\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        togglePlay(item.id);\r\n                      }}\r\n                    >\r\n                      {playingId === item.id ? <FiPause /> : <FiPlay />}\r\n                    </button>\r\n                    <div>\r\n                      <div className=\"text-sm font-medium text-gray-900\">{item.title}</div>\r\n                      <div className=\"text-sm text-gray-500\">{item.description}</div>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800\">\r\n                    {item.category}\r\n                  </span>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {item.duration}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {item.dateAdded}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                  <div className=\"flex justify-end space-x-2\">\r\n                    <button \r\n                      className=\"text-blue-600 hover:text-blue-900\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        // 编辑音乐\r\n                      }}\r\n                    >\r\n                      <FiEdit />\r\n                    </button>\r\n                    <button \r\n                      className=\"text-red-600 hover:text-red-900\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        setMusic(prev => prev.filter(m => m.id !== item.id));\r\n                      }}\r\n                    >\r\n                      <FiTrash2 />\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n      {filteredMusic.length === 0 && (\r\n        <div className=\"text-center py-12\">\r\n          <FiMusic className=\"mx-auto text-gray-400 text-5xl mb-4\" />\r\n          <p className=\"text-gray-500\">没有找到匹配的音乐</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.713Z",
      "updatedAt": "2025-03-04T10:16:05.355Z"
    },
    {
      "id": "a3f6192f-642b-4da9-8242-0ed809436d3c",
      "projectType": "video-generation",
      "componentName": "MusicUploadPage",
      "content": "'use client';\r\n\r\nimport { useState, useRef } from 'react';\r\nimport { FiUpload, FiX, FiMusic, FiArrowLeft, FiPlay, FiPause } from 'react-icons/fi';\r\n\r\n// 预定义的音乐分类\r\nconst musicCategories = ['欢快', '科技', '舒缓', '激励', '商务', '自然', '神秘', '紧张', '浪漫', '悲伤'];\r\n\r\nexport default function MusicUploadPage() {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [customCategory, setCustomCategory] = useState('');\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [duration, setDuration] = useState('0:00');\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n\r\n  // 处理文件选择\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedFile = e.target.files?.[0];\r\n    if (!selectedFile) return;\r\n\r\n    // 检查文件类型\r\n    const isAudio = selectedFile.type.startsWith('audio/');\r\n    if (!isAudio) {\r\n      alert('请选择音频文件');\r\n      return;\r\n    }\r\n\r\n    setFile(selectedFile);\r\n\r\n    // 创建音频元素获取时长\r\n    const audio = new Audio(URL.createObjectURL(selectedFile));\r\n    audio.addEventListener('loadedmetadata', () => {\r\n      const minutes = Math.floor(audio.duration / 60);\r\n      const seconds = Math.floor(audio.duration % 60);\r\n      setDuration(`${minutes}:${seconds.toString().padStart(2, '0')}`);\r\n    });\r\n  };\r\n\r\n  // 播放/暂停音频\r\n  const togglePlay = () => {\r\n    if (!audioRef.current) return;\r\n    \r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n    } else {\r\n      audioRef.current.play();\r\n    }\r\n    \r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  // 处理表单提交\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    const finalCategory = category === 'custom' ? customCategory : category;\r\n    \r\n    if (!title || !description || !finalCategory || !file) {\r\n      alert('请填写所有必填字段并上传文件');\r\n      return;\r\n    }\r\n    \r\n    setIsUploading(true);\r\n    \r\n    // 模拟上传过程\r\n    setTimeout(() => {\r\n      setIsUploading(false);\r\n      alert('音乐上传成功！');\r\n      // 重置表单\r\n      setTitle('');\r\n      setDescription('');\r\n      setCategory('');\r\n      setCustomCategory('');\r\n      setFile(null);\r\n      setDuration('0:00');\r\n      setIsPlaying(false);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-sm w-full max-w-4xl mx-auto\">\r\n      <div className=\"flex items-center mb-6\">\r\n        <button className=\"mr-4 text-blue-500 hover:text-blue-700\">\r\n          <FiArrowLeft size={20} />\r\n        </button>\r\n        <h1 className=\"text-2xl font-bold text-gray-800\">添加背景音乐</h1>\r\n      </div>\r\n      \r\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                音乐标题 <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"输入音乐标题\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                音乐描述 <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <textarea\r\n                id=\"description\"\r\n                rows={4}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"描述音乐风格和适用场景\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                音乐分类 <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <select\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">选择分类</option>\r\n                {musicCategories.map(cat => (\r\n                  <option key={cat} value={cat}>{cat}</option>\r\n                ))}\r\n                <option value=\"custom\">自定义分类</option>\r\n              </select>\r\n              \r\n              {category === 'custom' && (\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"w-full mt-2 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  placeholder=\"输入自定义分类\"\r\n                  value={customCategory}\r\n                  onChange={(e) => setCustomCategory(e.target.value)}\r\n                  required\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              上传音乐文件 <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            \r\n            <div \r\n              className={`border-2 border-dashed rounded-lg p-4 h-40 flex flex-col items-center justify-center cursor-pointer ${\r\n                file ? 'border-blue-300 bg-blue-50' : 'border-gray-300 hover:border-blue-400'\r\n              }`}\r\n              onClick={() => fileInputRef.current?.click()}\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                ref={fileInputRef}\r\n                className=\"hidden\"\r\n                accept=\"audio/*\"\r\n                onChange={handleFileChange}\r\n              />\r\n              \r\n              {file ? (\r\n                <div className=\"text-center\">\r\n                  <FiMusic className=\"mx-auto text-blue-500 text-3xl mb-2\" />\r\n                  <p className=\"text-gray-700 font-medium\">{file.name}</p>\r\n                  <p className=\"text-gray-500 text-sm mt-1\">时长: {duration}</p>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <FiUpload className=\"text-gray-400 text-4xl mb-2\" />\r\n                  <p className=\"text-gray-500 text-center\">\r\n                    点击或拖拽音频文件到此处上传<br />\r\n                    <span className=\"text-sm\">支持 MP3, WAV, OGG 等格式</span>\r\n                  </p>\r\n                </>\r\n              )}\r\n            </div>\r\n            \r\n            {file && (\r\n              <div className=\"mt-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"flex items-center text-blue-600 hover:text-blue-800\"\r\n                    onClick={togglePlay}\r\n                  >\r\n                    {isPlaying ? (\r\n                      <>\r\n                        <FiPause className=\"mr-1\" /> 暂停\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <FiPlay className=\"mr-1\" /> 播放\r\n                      </>\r\n                    )}\r\n                  </button>\r\n                  \r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"text-red-500 hover:text-red-700 text-sm flex items-center\"\r\n                    onClick={() => {\r\n                      setFile(null);\r\n                      setDuration('0:00');\r\n                      setIsPlaying(false);\r\n                    }}\r\n                  >\r\n                    <FiX className=\"mr-1\" /> 移除文件\r\n                  </button>\r\n                </div>\r\n                \r\n                {file && (\r\n                  <audio \r\n                    ref={audioRef} \r\n                    src={URL.createObjectURL(file)} \r\n                    onEnded={() => setIsPlaying(false)}\r\n                    className=\"hidden\" \r\n                  />\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex justify-end space-x-4 pt-4 border-t\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\r\n          >\r\n            取消\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n            disabled={isUploading || !title || !description || (!category || (category === 'custom' && !customCategory)) || !file}\r\n          >\r\n            {isUploading ? '上传中...' : '上传音乐'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.715Z",
      "updatedAt": "2025-03-04T10:16:05.358Z"
    },
    {
      "id": "9bb82928-0854-4b9d-be2d-4ad5ad747047",
      "projectType": "video-generation",
      "componentName": "ResourceListPage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { FiImage, FiVideo, FiSearch, FiFilter, FiPlus, FiTrash2, FiEdit } from 'react-icons/fi';\r\n\r\n// 模拟数据\r\nconst mockResources = [\r\n  { id: 1, title: '城市天际线', type: 'image', description: '现代城市高楼大厦天际线', url: '/images/resources/skyline.jpg', tags: ['城市', '建筑', '天际线'], dateAdded: '2023-10-15' },\r\n  { id: 2, title: '自然风景', type: 'image', description: '山川湖泊自然风景', url: '/images/resources/nature.jpg', tags: ['自然', '风景', '山水'], dateAdded: '2023-10-14' },\r\n  { id: 3, title: '商务会议', type: 'video', description: '专业商务会议场景', url: '/videos/resources/meeting.mp4', tags: ['商务', '会议', '专业'], dateAdded: '2023-10-13' },\r\n  { id: 4, title: '科技产品展示', type: 'video', description: '最新科技产品展示视频', url: '/videos/resources/tech.mp4', tags: ['科技', '产品', '展示'], dateAdded: '2023-10-12' },\r\n  { id: 5, title: '抽象背景', type: 'image', description: '彩色抽象艺术背景', url: '/images/resources/abstract.jpg', tags: ['抽象', '艺术', '背景'], dateAdded: '2023-10-11' },\r\n  { id: 6, title: '人物特写', type: 'image', description: '专业人物肖像特写', url: '/images/resources/portrait.jpg', tags: ['人物', '肖像', '特写'], dateAdded: '2023-10-10' },\r\n];\r\n\r\nexport default function ResourceListPage() {\r\n  const [resources, setResources] = useState(mockResources);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterType, setFilterType] = useState<'all' | 'image' | 'video'>('all');\r\n  const [selectedResources, setSelectedResources] = useState<number[]>([]);\r\n\r\n  // 过滤资源\r\n  const filteredResources = resources.filter(resource => {\r\n    const matchesSearch = resource.title.toLowerCase().includes(searchTerm.toLowerCase()) || \r\n                         resource.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         resource.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    \r\n    const matchesType = filterType === 'all' || resource.type === filterType;\r\n    \r\n    return matchesSearch && matchesType;\r\n  });\r\n\r\n  // 选择/取消选择资源\r\n  const toggleResourceSelection = (id: number) => {\r\n    setSelectedResources(prev => \r\n      prev.includes(id) \r\n        ? prev.filter(resourceId => resourceId !== id)\r\n        : [...prev, id]\r\n    );\r\n  };\r\n\r\n  // 删除选中的资源\r\n  const deleteSelectedResources = () => {\r\n    setResources(prev => prev.filter(resource => !selectedResources.includes(resource.id)));\r\n    setSelectedResources([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-sm w-full max-w-6xl mx-auto\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold text-gray-800\">资源库</h1>\r\n        <div className=\"flex space-x-2\">\r\n          <button \r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center\"\r\n            onClick={() => {/* 导航到添加资源页面 */}}\r\n          >\r\n            <FiPlus className=\"mr-2\" />\r\n            添加资源\r\n          </button>\r\n          {selectedResources.length > 0 && (\r\n            <button \r\n              className=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 flex items-center\"\r\n              onClick={deleteSelectedResources}\r\n            >\r\n              <FiTrash2 className=\"mr-2\" />\r\n              删除所选 ({selectedResources.length})\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-4 mb-6\">\r\n        <div className=\"relative flex-grow\">\r\n          <FiSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\r\n          <input\r\n            type=\"text\"\r\n            className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            placeholder=\"搜索资源...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"flex space-x-2\">\r\n          <button \r\n            className={`px-4 py-2 rounded-md flex items-center ${\r\n              filterType === 'all' ? 'bg-blue-600 text-white' : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\r\n            }`}\r\n            onClick={() => setFilterType('all')}\r\n          >\r\n            <FiFilter className=\"mr-2\" />\r\n            全部\r\n          </button>\r\n          <button \r\n            className={`px-4 py-2 rounded-md flex items-center ${\r\n              filterType === 'image' ? 'bg-blue-600 text-white' : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\r\n            }`}\r\n            onClick={() => setFilterType('image')}\r\n          >\r\n            <FiImage className=\"mr-2\" />\r\n            图片\r\n          </button>\r\n          <button \r\n            className={`px-4 py-2 rounded-md flex items-center ${\r\n              filterType === 'video' ? 'bg-blue-600 text-white' : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\r\n            }`}\r\n            onClick={() => setFilterType('video')}\r\n          >\r\n            <FiVideo className=\"mr-2\" />\r\n            视频\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {filteredResources.map(resource => (\r\n          <div \r\n            key={resource.id} \r\n            className={`border rounded-lg overflow-hidden hover:shadow-md transition-shadow ${\r\n              selectedResources.includes(resource.id) ? 'ring-2 ring-blue-500' : ''\r\n            }`}\r\n            onClick={() => toggleResourceSelection(resource.id)}\r\n          >\r\n            <div className=\"relative h-48 bg-gray-100\">\r\n              {resource.type === 'image' ? (\r\n                <div className=\"w-full h-full bg-gray-200 flex items-center justify-center\">\r\n                  <FiImage className=\"text-gray-400 text-4xl\" />\r\n                </div>\r\n              ) : (\r\n                <div className=\"w-full h-full bg-gray-200 flex items-center justify-center\">\r\n                  <FiVideo className=\"text-gray-400 text-4xl\" />\r\n                </div>\r\n              )}\r\n              <div className=\"absolute top-2 right-2 bg-gray-800 text-white text-xs px-2 py-1 rounded\">\r\n                {resource.type === 'image' ? '图片' : '视频'}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"p-4\">\r\n              <h3 className=\"font-medium text-gray-800\">{resource.title}</h3>\r\n              <p className=\"text-gray-600 text-sm mt-1\">{resource.description}</p>\r\n              \r\n              <div className=\"flex flex-wrap mt-2\">\r\n                {resource.tags.map(tag => (\r\n                  <span key={tag} className=\"text-xs bg-gray-100 text-gray-600 px-2 py-1 rounded mr-2 mb-2\">\r\n                    {tag}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n              \r\n              <div className=\"flex justify-between items-center mt-4 text-sm text-gray-500\">\r\n                <span>添加于: {resource.dateAdded}</span>\r\n                <div className=\"flex space-x-2\">\r\n                  <button className=\"p-1 hover:text-blue-500\">\r\n                    <FiEdit />\r\n                  </button>\r\n                  <button className=\"p-1 hover:text-red-500\">\r\n                    <FiTrash2 />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      {filteredResources.length === 0 && (\r\n        <div className=\"text-center py-12\">\r\n          <p className=\"text-gray-500\">没有找到匹配的资源</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.716Z",
      "updatedAt": "2025-03-04T10:16:05.342Z"
    },
    {
      "id": "98615fc4-e5fa-4c1f-a5e9-baf39b36d769",
      "projectType": "video-generation",
      "componentName": "ResourceUploadPage",
      "content": "'use client';\r\n\r\nimport { useState, useRef } from 'react';\r\nimport { FiUpload, FiX, FiImage, FiVideo, FiPlus, FiArrowLeft } from 'react-icons/fi';\r\n\r\nexport default function ResourceUploadPage() {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [resourceType, setResourceType] = useState<'image' | 'video'>('image');\r\n  const [tags, setTags] = useState<string[]>([]);\r\n  const [currentTag, setCurrentTag] = useState('');\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [previewUrl, setPreviewUrl] = useState<string | null>(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // 处理文件选择\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedFile = e.target.files?.[0];\r\n    if (!selectedFile) return;\r\n\r\n    // 检查文件类型\r\n    const isImage = selectedFile.type.startsWith('image/');\r\n    const isVideo = selectedFile.type.startsWith('video/');\r\n\r\n    if ((resourceType === 'image' && !isImage) || (resourceType === 'video' && !isVideo)) {\r\n      alert(`请选择${resourceType === 'image' ? '图片' : '视频'}文件`);\r\n      return;\r\n    }\r\n\r\n    setFile(selectedFile);\r\n\r\n    // 创建预览URL\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreviewUrl(objectUrl);\r\n\r\n    // 清理函数\r\n    return () => URL.revokeObjectURL(objectUrl);\r\n  };\r\n\r\n  // 处理标签添加\r\n  const handleAddTag = () => {\r\n    if (currentTag.trim() && !tags.includes(currentTag.trim())) {\r\n      setTags([...tags, currentTag.trim()]);\r\n      setCurrentTag('');\r\n    }\r\n  };\r\n\r\n  // 处理标签删除\r\n  const handleRemoveTag = (tagToRemove: string) => {\r\n    setTags(tags.filter(tag => tag !== tagToRemove));\r\n  };\r\n\r\n  // 处理表单提交\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!title || !description || !file) {\r\n      alert('请填写所有必填字段并上传文件');\r\n      return;\r\n    }\r\n    \r\n    setIsUploading(true);\r\n    \r\n    // 模拟上传过程\r\n    setTimeout(() => {\r\n      setIsUploading(false);\r\n      alert('资源上传成功！');\r\n      // 重置表单\r\n      setTitle('');\r\n      setDescription('');\r\n      setTags([]);\r\n      setFile(null);\r\n      setPreviewUrl(null);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-sm w-full max-w-4xl mx-auto\">\r\n      <div className=\"flex items-center mb-6\">\r\n        <button className=\"mr-4 text-blue-500 hover:text-blue-700\">\r\n          <FiArrowLeft size={20} />\r\n        </button>\r\n        <h1 className=\"text-2xl font-bold text-gray-800\">添加新资源</h1>\r\n      </div>\r\n      \r\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                资源标题 <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"输入资源标题\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                资源描述 <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <textarea\r\n                id=\"description\"\r\n                rows={4}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"输入资源描述\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                资源类型 <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <div className=\"grid grid-cols-2 gap-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`px-4 py-2 rounded-md flex items-center justify-center ${\r\n                    resourceType === 'image' \r\n                      ? 'bg-blue-500 text-white' \r\n                      : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\r\n                  }`}\r\n                  onClick={() => setResourceType('image')}\r\n                >\r\n                  <FiImage className=\"mr-2\" />\r\n                  图片\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`px-4 py-2 rounded-md flex items-center justify-center ${\r\n                    resourceType === 'video' \r\n                      ? 'bg-blue-500 text-white' \r\n                      : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\r\n                  }`}\r\n                  onClick={() => setResourceType('video')}\r\n                >\r\n                  <FiVideo className=\"mr-2\" />\r\n                  视频\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                标签\r\n              </label>\r\n              <div className=\"flex\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"flex-grow px-3 py-2 border border-gray-300 rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  placeholder=\"添加标签\"\r\n                  value={currentTag}\r\n                  onChange={(e) => setCurrentTag(e.target.value)}\r\n                  onKeyPress={(e) => e.key === 'Enter' && (e.preventDefault(), handleAddTag())}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"px-3 py-2 bg-blue-500 text-white rounded-r-md hover:bg-blue-600\"\r\n                  onClick={handleAddTag}\r\n                >\r\n                  <FiPlus />\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"flex flex-wrap mt-2\">\r\n                {tags.map(tag => (\r\n                  <span \r\n                    key={tag} \r\n                    className=\"flex items-center bg-gray-100 text-gray-700 text-sm px-2 py-1 rounded mr-2 mb-2\"\r\n                  >\r\n                    {tag}\r\n                    <button \r\n                      type=\"button\"\r\n                      className=\"ml-1 text-gray-500 hover:text-gray-700\"\r\n                      onClick={() => handleRemoveTag(tag)}\r\n                    >\r\n                      <FiX size={14} />\r\n                    </button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              上传文件 <span className=\"text-red-500\">*</span>\r\n            </label>\r\n            \r\n            <div \r\n              className={`border-2 border-dashed rounded-lg p-4 h-64 flex flex-col items-center justify-center cursor-pointer ${\r\n                previewUrl ? 'border-blue-300 bg-blue-50' : 'border-gray-300 hover:border-blue-400'\r\n              }`}\r\n              onClick={() => fileInputRef.current?.click()}\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                ref={fileInputRef}\r\n                className=\"hidden\"\r\n                accept={resourceType === 'image' ? 'image/*' : 'video/*'}\r\n                onChange={handleFileChange}\r\n              />\r\n              \r\n              {previewUrl ? (\r\n                resourceType === 'image' ? (\r\n                  <img \r\n                    src={previewUrl} \r\n                    alt=\"预览\" \r\n                    className=\"max-h-full max-w-full object-contain\"\r\n                  />\r\n                ) : (\r\n                  <video \r\n                    src={previewUrl} \r\n                    controls \r\n                    className=\"max-h-full max-w-full\"\r\n                  />\r\n                )\r\n              ) : (\r\n                <>\r\n                  <FiUpload className=\"text-gray-400 text-4xl mb-2\" />\r\n                  <p className=\"text-gray-500 text-center\">\r\n                    点击或拖拽文件到此处上传<br />\r\n                    <span className=\"text-sm\">\r\n                      {resourceType === 'image' ? '支持 JPG, PNG, GIF 等格式' : '支持 MP4, WebM 等格式'}\r\n                    </span>\r\n                  </p>\r\n                </>\r\n              )}\r\n            </div>\r\n            \r\n            {previewUrl && (\r\n              <button\r\n                type=\"button\"\r\n                className=\"mt-2 text-red-500 hover:text-red-700 text-sm flex items-center\"\r\n                onClick={() => {\r\n                  setFile(null);\r\n                  setPreviewUrl(null);\r\n                }}\r\n              >\r\n                <FiX className=\"mr-1\" /> 移除文件\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex justify-end space-x-4 pt-4 border-t\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\r\n          >\r\n            取消\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n            disabled={isUploading || !title || !description || !file}\r\n          >\r\n            {isUploading ? '上传中...' : '上传资源'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.717Z",
      "updatedAt": "2025-03-04T10:16:05.345Z"
    },
    {
      "id": "b6b512f6-e16f-4434-965a-8d1818180aa6",
      "projectType": "video-generation",
      "componentName": "ScriptGenerationPage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\n\r\ntype ScriptStyle = 'informative' | 'entertaining' | 'professional';\r\n\r\nexport default function ScriptGenerationPage() {\r\n  const [topic, setTopic] = useState('');\r\n  const [keywords, setKeywords] = useState('');\r\n  const [style, setStyle] = useState<ScriptStyle>('informative');\r\n  const [length, setLength] = useState('medium');\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [generatedScript, setGeneratedScript] = useState('');\r\n\r\n  const handleGenerate = () => {\r\n    setIsGenerating(true);\r\n    // 模拟API调用\r\n    setTimeout(() => {\r\n      const scriptSamples = {\r\n        informative: `# 人工智能在视频制作中的应用\\n\\n## 引言\\n人工智能正在彻底改变视频制作的方式。从自动剪辑到内容生成，AI工具正在使创作者能够更快、更高效地工作。\\n\\n## 主要应用\\n- 自动脚本生成：AI可以基于关键词生成完整的视频脚本\\n- 智能剪辑：自动识别最佳片段并组合\\n- 语音合成：将文本转换为自然的语音旁白\\n\\n## 未来展望\\n随着技术的进步，我们可以期待更多创新功能的出现，进一步简化视频制作流程。`,\r\n        entertaining: `# 人工智能：你的新视频制作助手！\\n\\n## 开场白\\n嘿，各位创作者！还在为视频制作头疼吗？AI来拯救你啦！\\n\\n## 酷炫功能\\n- 脚本生成魔法：输入几个关键词，瞬间获得完整脚本！太神奇了！\\n- 智能剪辑大师：告别无聊片段，只留精彩瞬间\\n- 语音合成术：文字变语音，告别录音困扰\\n\\n## 结语\\n未来已来，让AI成为你的创作超能力！点赞关注，下期再见！`,\r\n        professional: `# 人工智能技术在视频制作领域的应用与分析\\n\\n## 概述\\n本视频将深入探讨人工智能技术如何优化现代视频制作工作流程，提高效率并降低成本。\\n\\n## 核心技术应用\\n- 基于深度学习的脚本自动生成系统\\n- 计算机视觉驱动的智能剪辑算法\\n- 神经网络语音合成技术的实际应用\\n\\n## 结论与展望\\n人工智能将持续重塑视频制作行业，专业人士应积极适应并利用这些技术保持竞争优势。`\r\n      };\r\n      \r\n      setGeneratedScript(scriptSamples[style]);\r\n      setIsGenerating(false);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-sm w-full max-w-5xl mx-auto\">\r\n      <h1 className=\"text-2xl font-bold text-gray-800 mb-6\">AI文案生成</h1>\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"topic\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              视频主题\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"topic\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"例如：人工智能在视频制作中的应用\"\r\n              value={topic}\r\n              onChange={(e) => setTopic(e.target.value)}\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label htmlFor=\"keywords\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              关键词（用逗号分隔）\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"keywords\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"例如：AI, 视频制作, 自动化, 效率\"\r\n              value={keywords}\r\n              onChange={(e) => setKeywords(e.target.value)}\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              文案风格\r\n            </label>\r\n            <div className=\"grid grid-cols-3 gap-2\">\r\n              <button\r\n                className={`px-4 py-2 rounded-md ${\r\n                  style === 'informative' \r\n                    ? 'bg-blue-500 text-white' \r\n                    : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\r\n                }`}\r\n                onClick={() => setStyle('informative')}\r\n              >\r\n                知识型\r\n              </button>\r\n              <button\r\n                className={`px-4 py-2 rounded-md ${\r\n                  style === 'entertaining' \r\n                    ? 'bg-blue-500 text-white' \r\n                    : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\r\n                }`}\r\n                onClick={() => setStyle('entertaining')}\r\n              >\r\n                娱乐型\r\n              </button>\r\n              <button\r\n                className={`px-4 py-2 rounded-md ${\r\n                  style === 'professional' \r\n                    ? 'bg-blue-500 text-white' \r\n                    : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\r\n                }`}\r\n                onClick={() => setStyle('professional')}\r\n              >\r\n                专业型\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              文案长度\r\n            </label>\r\n            <div className=\"grid grid-cols-3 gap-2\">\r\n              <button\r\n                className={`px-4 py-2 rounded-md ${\r\n                  length === 'short' \r\n                    ? 'bg-blue-500 text-white' \r\n                    : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\r\n                }`}\r\n                onClick={() => setLength('short')}\r\n              >\r\n                短视频\r\n              </button>\r\n              <button\r\n                className={`px-4 py-2 rounded-md ${\r\n                  length === 'medium' \r\n                    ? 'bg-blue-500 text-white' \r\n                    : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\r\n                }`}\r\n                onClick={() => setLength('medium')}\r\n              >\r\n                中等长度\r\n              </button>\r\n              <button\r\n                className={`px-4 py-2 rounded-md ${\r\n                  length === 'long' \r\n                    ? 'bg-blue-500 text-white' \r\n                    : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\r\n                }`}\r\n                onClick={() => setLength('long')}\r\n              >\r\n                长视频\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <button\r\n            className=\"w-full py-2 px-4 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md shadow-sm disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n            onClick={handleGenerate}\r\n            disabled={!topic || !keywords || isGenerating}\r\n          >\r\n            {isGenerating ? '生成中...' : '生成文案'}\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"border rounded-md p-4 bg-gray-50 h-[500px] overflow-auto\">\r\n          <h2 className=\"text-lg font-medium text-gray-800 mb-2\">生成的文案</h2>\r\n          {isGenerating ? (\r\n            <div className=\"flex items-center justify-center h-full\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\r\n            </div>\r\n          ) : generatedScript ? (\r\n            <div className=\"whitespace-pre-wrap text-gray-700\">\r\n              {generatedScript}\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-gray-500 italic flex items-center justify-center h-full\">\r\n              填写左侧表单并点击\"生成文案\"按钮\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {generatedScript && (\r\n        <div className=\"mt-6 flex justify-end space-x-4\">\r\n          <button className=\"px-4 py-2 bg-white border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\">\r\n            重新生成\r\n          </button>\r\n          <button className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\">\r\n            使用此文案\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.718Z",
      "updatedAt": "2025-03-04T10:16:05.337Z"
    },
    {
      "id": "05745e2b-86f1-4c06-9e8c-20f8b36cf189",
      "projectType": "video-generation",
      "componentName": "TransitionEffectsPage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { FiPlus, FiTrash2, FiEdit, FiPlay, FiCheck, FiX } from 'react-icons/fi';\r\n\r\n// 模拟数据\r\nconst mockTransitions = [\r\n  { id: 1, name: '淡入淡出', description: '平滑的淡入淡出效果', duration: 1.5, isDefault: true },\r\n  { id: 2, name: '左右滑动', description: '从右向左滑动切换', duration: 1.0, isDefault: false },\r\n  { id: 3, name: '上下滑动', description: '从下向上滑动切换', duration: 1.0, isDefault: false },\r\n  { id: 4, name: '缩放', description: '缩小淡出，放大淡入', duration: 1.2, isDefault: false },\r\n  { id: 5, name: '旋转', description: '旋转切换效果', duration: 1.5, isDefault: false },\r\n  { id: 6, name: '百叶窗', description: '百叶窗切换效果', duration: 1.8, isDefault: false },\r\n];\r\n\r\ninterface Transition {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  duration: number;\r\n  isDefault: boolean;\r\n}\r\n\r\nexport default function TransitionEffectsPage() {\r\n  const [transitions, setTransitions] = useState<Transition[]>(mockTransitions);\r\n  const [editingTransition, setEditingTransition] = useState<Transition | null>(null);\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [newTransition, setNewTransition] = useState<Omit<Transition, 'id'>>({\r\n    name: '',\r\n    description: '',\r\n    duration: 1.0,\r\n    isDefault: false,\r\n  });\r\n  const [previewingId, setPreviewingId] = useState<number | null>(null);\r\n\r\n  // 设置默认转场\r\n  const setDefaultTransition = (id: number) => {\r\n    setTransitions(transitions.map(transition => ({\r\n      ...transition,\r\n      isDefault: transition.id === id,\r\n    })));\r\n  };\r\n\r\n  // 删除转场\r\n  const deleteTransition = (id: number) => {\r\n    // 不允许删除默认转场\r\n    if (transitions.find(t => t.id === id)?.isDefault) {\r\n      alert('不能删除默认转场效果，请先设置其他转场为默认');\r\n      return;\r\n    }\r\n    \r\n    setTransitions(transitions.filter(transition => transition.id !== id));\r\n  };\r\n\r\n  // 开始编辑转场\r\n  const startEditing = (transition: Transition) => {\r\n    setEditingTransition(transition);\r\n  };\r\n\r\n  // 保存编辑\r\n  const saveEditing = () => {\r\n    if (!editingTransition) return;\r\n    \r\n    setTransitions(transitions.map(transition => \r\n      transition.id === editingTransition.id ? editingTransition : transition\r\n    ));\r\n    \r\n    setEditingTransition(null);\r\n  };\r\n\r\n  // 取消编辑\r\n  const cancelEditing = () => {\r\n    setEditingTransition(null);\r\n  };\r\n\r\n  // 添加新转场\r\n  const addTransition = () => {\r\n    if (!newTransition.name || !newTransition.description) {\r\n      alert('请填写转场名称和描述');\r\n      return;\r\n    }\r\n    \r\n    const newId = Math.max(0, ...transitions.map(t => t.id)) + 1;\r\n    \r\n    const transitionToAdd = {\r\n      ...newTransition,\r\n      id: newId,\r\n    };\r\n    \r\n    setTransitions([...transitions, transitionToAdd]);\r\n    \r\n    // 如果设置为默认，更新其他转场\r\n    if (newTransition.isDefault) {\r\n      setTransitions(prev => prev.map(transition => ({\r\n        ...transition,\r\n        isDefault: transition.id === newId,\r\n      })));\r\n    }\r\n    \r\n    // 重置表单\r\n    setNewTransition({\r\n      name: '',\r\n      description: '',\r\n      duration: 1.0,\r\n      isDefault: false,\r\n    });\r\n    \r\n    setIsAdding(false);\r\n  };\r\n\r\n  // 预览转场\r\n  const previewTransition = (id: number) => {\r\n    setPreviewingId(id);\r\n    \r\n    // 模拟预览结束\r\n    setTimeout(() => {\r\n      setPreviewingId(null);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-sm w-full max-w-6xl mx-auto\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold text-gray-800\">转场动画管理</h1>\r\n        <button \r\n          className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center\"\r\n          onClick={() => setIsAdding(true)}\r\n        >\r\n          <FiPlus className=\"mr-2\" />\r\n          添加转场\r\n        </button>\r\n      </div>\r\n      \r\n      {/* 转场列表 */}\r\n      <div className=\"overflow-hidden border rounded-lg mb-6\">\r\n        <table className=\"min-w-full divide-y divide-gray-200\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                转场名称\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                描述\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                时长 (秒)\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                默认\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                操作\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {transitions.map(transition => (\r\n              <tr key={transition.id} className=\"hover:bg-gray-50\">\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  {editingTransition?.id === transition.id ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"w-full px-2 py-1 border border-gray-300 rounded-md\"\r\n                      value={editingTransition.name}\r\n                      onChange={(e) => setEditingTransition({...editingTransition, name: e.target.value})}\r\n                    />\r\n                  ) : (\r\n                    <div className=\"text-sm font-medium text-gray-900\">{transition.name}</div>\r\n                  )}\r\n                </td>\r\n                <td className=\"px-6 py-4\">\r\n                  {editingTransition?.id === transition.id ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"w-full px-2 py-1 border border-gray-300 rounded-md\"\r\n                      value={editingTransition.description}\r\n                      onChange={(e) => setEditingTransition({...editingTransition, description: e.target.value})}\r\n                    />\r\n                  ) : (\r\n                    <div className=\"text-sm text-gray-500\">{transition.description}</div>\r\n                  )}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  {editingTransition?.id === transition.id ? (\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"w-20 px-2 py-1 border border-gray-300 rounded-md\"\r\n                      value={editingTransition.duration}\r\n                      min=\"0.1\"\r\n                      step=\"0.1\"\r\n                      onChange={(e) => setEditingTransition({...editingTransition, duration: parseFloat(e.target.value) || 1.0})}\r\n                    />\r\n                  ) : (\r\n                    <div className=\"text-sm text-gray-500\">{transition.duration}秒</div>\r\n                  )}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  {editingTransition?.id === transition.id ? (\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                      checked={editingTransition.isDefault}\r\n                      onChange={(e) => setEditingTransition({...editingTransition, isDefault: e.target.checked})}\r\n                    />\r\n                  ) : (\r\n                    <div>\r\n                      {transition.isDefault ? (\r\n                        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\r\n                          默认\r\n                        </span>\r\n                      ) : (\r\n                        <button\r\n                          className=\"text-xs text-blue-600 hover:text-blue-900\"\r\n                          onClick={() => setDefaultTransition(transition.id)}\r\n                        >\r\n                          设为默认\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                  {editingTransition?.id === transition.id ? (\r\n                    <div className=\"flex justify-end space-x-2\">\r\n                      <button \r\n                        className=\"text-green-600 hover:text-green-900\"\r\n                        onClick={saveEditing}\r\n                      >\r\n                        <FiCheck />\r\n                      </button>\r\n                      <button \r\n                        className=\"text-red-600 hover:text-red-900\"\r\n                        onClick={cancelEditing}\r\n                      >\r\n                        <FiX />\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex justify-end space-x-2\">\r\n                      <button \r\n                        className=\"text-blue-600 hover:text-blue-900\"\r\n                        onClick={() => previewTransition(transition.id)}\r\n                      >\r\n                        {previewingId === transition.id ? (\r\n                          <span className=\"text-xs\">预览中...</span>\r\n                        ) : (\r\n                          <FiPlay />\r\n                        )}\r\n                      </button>\r\n                      <button \r\n                        className=\"text-blue-600 hover:text-blue-900\"\r\n                        onClick={() => startEditing(transition)}\r\n                      >\r\n                        <FiEdit />\r\n                      </button>\r\n                      <button \r\n                        className=\"text-red-600 hover:text-red-900\"\r\n                        onClick={() => deleteTransition(transition.id)}\r\n                        disabled={transition.isDefault}\r\n                      >\r\n                        <FiTrash2 />\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n      {/* 添加新转场表单 */}\r\n      {isAdding && (\r\n        <div className=\"border rounded-lg p-4 mb-6\">\r\n          <h2 className=\"text-lg font-medium text-gray-800 mb-4\">添加新转场</h2>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                转场名称 <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"输入转场名称\"\r\n                value={newTransition.name}\r\n                onChange={(e) => setNewTransition({...newTransition, name: e.target.value})}\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                转场时长 (秒)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"输入转场时长\"\r\n                value={newTransition.duration}\r\n                min=\"0.1\"\r\n                step=\"0.1\"\r\n                onChange={(e) => setNewTransition({...newTransition, duration: parseFloat(e.target.value) || 1.0})}\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"md:col-span-2\">\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                转场描述 <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"输入转场描述\"\r\n                value={newTransition.description}\r\n                onChange={(e) => setNewTransition({...newTransition, description: e.target.value})}\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"md:col-span-2\">\r\n              <label className=\"flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded mr-2\"\r\n                  checked={newTransition.isDefault}\r\n                  onChange={(e) => setNewTransition({...newTransition, isDefault: e.target.checked})}\r\n                />\r\n                <span className=\"text-sm text-gray-700\">设为默认转场</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex justify-end space-x-2\">\r\n            <button\r\n              className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\r\n              onClick={() => {\r\n                setIsAdding(false);\r\n                setNewTransition({\r\n                  name: '',\r\n                  description: '',\r\n                  duration: 1.0,\r\n                  isDefault: false,\r\n                });\r\n              }}\r\n            >\r\n              取消\r\n            </button>\r\n            <button\r\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n              onClick={addTransition}\r\n            >\r\n              添加\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* 预览区域 */}\r\n      <div className=\"border rounded-lg p-4\">\r\n        <h2 className=\"text-lg font-medium text-gray-800 mb-4\">转场效果预览</h2>\r\n        \r\n        <div className=\"bg-gray-100 h-64 rounded-md flex items-center justify-center\">\r\n          {previewingId ? (\r\n            <div className=\"text-center\">\r\n              <div className=\"animate-pulse text-blue-500 text-lg mb-2\">\r\n                正在预览: {transitions.find(t => t.id === previewingId)?.name}\r\n              </div>\r\n              <div className=\"text-gray-500\">\r\n                转场效果演示中...\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-gray-500\">\r\n              点击转场旁边的播放按钮预览效果\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.719Z",
      "updatedAt": "2025-03-04T10:16:05.362Z"
    },
    {
      "id": "7eff2a37-8599-453b-b34f-abe42db09847",
      "projectType": "video-generation",
      "componentName": "VideoGenerationPage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { FiPlay, FiDownload, FiShare2, FiSettings, FiCheck, FiClock, FiAlertCircle, FiEdit } from 'react-icons/fi';\r\n  \r\n// 模拟数据\r\nconst mockVideoProject = {\r\n  title: '人工智能在视频制作中的应用',\r\n  duration: '02:35',\r\n  resolution: '1920x1080', \r\n  segments: [\r\n    { id: 1, text: '# 人工智能在视频制作中的应用', resource: '城市天际线', duration: 5 },\r\n    { id: 2, text: '## 引言\\n人工智能正在彻底改变视频制作的方式。从自动剪辑到内容生成，AI工具正在使创作者能够更快、更高效地工作。', resource: '科技产品展示', duration: 8 },\r\n    { id: 3, text: '## 主要应用\\n- 自动脚本生成：AI可以基于关键词生成完整的视频脚本\\n- 智能剪辑：自动识别最佳片段并组合\\n- 语音合成：将文本转换为自然的语音旁白', resource: '抽象背景', duration: 12 },\r\n    { id: 4, text: '## 未来展望\\n随着技术的进步，我们可以期待更多创新功能的出现，进一步简化视频制作流程。', resource: '自然风景', duration: 10 },\r\n  ],\r\n  backgroundMusic: '科技感十足',\r\n  transition: '淡入淡出',  \r\n};\r\n\r\nexport default function VideoGenerationPage() {\r\n  const [videoProject] = useState(mockVideoProject);\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [generationProgress, setGenerationProgress] = useState(0);\r\n  const [generationStep, setGenerationStep] = useState('');\r\n  const [isGenerated, setIsGenerated] = useState(false);\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [settings, setSettings] = useState({\r\n    resolution: '1920x1080',\r\n    format: 'mp4',\r\n    quality: 'high',\r\n  });\r\n\r\n  // 生成视频\r\n  const generateVideo = () => {\r\n    setIsGenerating(true);\r\n    setGenerationProgress(0);\r\n    setGenerationStep('准备资源');\r\n    \r\n    // 模拟生成过程\r\n    const steps = [\r\n      { step: '准备资源', progress: 10 },\r\n      { step: '生成语音', progress: 30 },\r\n      { step: '匹配画面', progress: 50 },\r\n      { step: '添加背景音乐', progress: 70 },\r\n      { step: '应用转场效果', progress: 85 },\r\n      { step: '导出视频', progress: 95 },\r\n      { step: '完成', progress: 100 },\r\n    ];\r\n    \r\n    let currentStep = 0;\r\n    \r\n    const interval = setInterval(() => {\r\n      if (currentStep < steps.length) {\r\n        setGenerationStep(steps[currentStep].step);\r\n        setGenerationProgress(steps[currentStep].progress);\r\n        currentStep++;\r\n      } else {\r\n        clearInterval(interval);\r\n        setIsGenerating(false);\r\n        setIsGenerated(true);\r\n      }\r\n    }, 1500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-sm w-full max-w-6xl mx-auto\">\r\n      <h1 className=\"text-2xl font-bold text-gray-800 mb-6\">一键生成视频</h1>\r\n      \r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        {/* 左侧：项目信息 */}\r\n        <div className=\"lg:col-span-1 space-y-6\">\r\n          <div className=\"border rounded-lg p-4\">\r\n            <h2 className=\"text-lg font-medium text-gray-800 mb-4\">项目信息</h2>\r\n            \r\n            <div className=\"space-y-3\">\r\n              <div>\r\n                <div className=\"text-sm text-gray-500\">项目标题</div>\r\n                <div className=\"font-medium\">{videoProject.title}</div>\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <div className=\"text-sm text-gray-500\">预计时长</div>\r\n                  <div className=\"font-medium\">{videoProject.duration}</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-sm text-gray-500\">分辨率</div>\r\n                  <div className=\"font-medium\">{videoProject.resolution}</div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div>\r\n                <div className=\"text-sm text-gray-500\">背景音乐</div>\r\n                <div className=\"font-medium\">{videoProject.backgroundMusic}</div>\r\n              </div>\r\n              \r\n              <div>\r\n                <div className=\"text-sm text-gray-500\">转场效果</div>\r\n                <div className=\"font-medium\">{videoProject.transition}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"border rounded-lg p-4\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h2 className=\"text-lg font-medium text-gray-800\">导出设置</h2>\r\n              <button \r\n                className=\"text-blue-600 hover:text-blue-800\"\r\n                onClick={() => setShowSettings(!showSettings)}\r\n              >\r\n                <FiSettings />\r\n              </button>\r\n            </div>\r\n            \r\n            {showSettings ? (\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    分辨率\r\n                  </label>\r\n                  <select\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    value={settings.resolution}\r\n                    onChange={(e) => setSettings({...settings, resolution: e.target.value})}\r\n                  >\r\n                    <option value=\"1920x1080\">1920x1080 (Full HD)</option>\r\n                    <option value=\"1280x720\">1280x720 (HD)</option>\r\n                    <option value=\"3840x2160\">3840x2160 (4K)</option>\r\n                  </select>\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    格式\r\n                  </label>\r\n                  <select\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    value={settings.format}\r\n                    onChange={(e) => setSettings({...settings, format: e.target.value})}\r\n                  >\r\n                    <option value=\"mp4\">MP4</option>\r\n                    <option value=\"mov\">MOV</option>\r\n                    <option value=\"webm\">WebM</option>\r\n                  </select>\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    质量\r\n                  </label>\r\n                  <select\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    value={settings.quality}\r\n                    onChange={(e) => setSettings({...settings, quality: e.target.value})}\r\n                  >\r\n                    <option value=\"high\">高质量</option>\r\n                    <option value=\"medium\">中等质量</option>\r\n                    <option value=\"low\">低质量</option>\r\n                  </select>\r\n                </div>\r\n                \r\n                <button\r\n                  className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n                  onClick={() => setShowSettings(false)}\r\n                >\r\n                  保存设置\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-sm text-gray-500\">分辨率:</span>\r\n                  <span className=\"text-sm font-medium\">{settings.resolution}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-sm text-gray-500\">格式:</span>\r\n                  <span className=\"text-sm font-medium\">{settings.format.toUpperCase()}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-sm text-gray-500\">质量:</span>\r\n                  <span className=\"text-sm font-medium\">\r\n                    {settings.quality === 'high' ? '高质量' : settings.quality === 'medium' ? '中等质量' : '低质量'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 中间和右侧：视频预览和段落 */}\r\n        <div className=\"lg:col-span-2 space-y-6\">\r\n          {/* 视频预览 */}\r\n          <div className=\"border rounded-lg p-4\">\r\n            <h2 className=\"text-lg font-medium text-gray-800 mb-4\">视频预览</h2>\r\n            \r\n            <div className=\"bg-gray-100 h-64 rounded-md flex items-center justify-center\">\r\n              {isGenerated ? (\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-gray-800 font-medium mb-2\">视频已生成</div>\r\n                  <div className=\"flex justify-center space-x-4\">\r\n                    <button className=\"flex items-center text-blue-600 hover:text-blue-800\">\r\n                      <FiPlay className=\"mr-1\" /> 播放\r\n                    </button>\r\n                    <button className=\"flex items-center text-blue-600 hover:text-blue-800\">\r\n                      <FiDownload className=\"mr-1\" /> 下载\r\n                    </button>\r\n                    <button className=\"flex items-center text-blue-600 hover:text-blue-800\">\r\n                      <FiShare2 className=\"mr-1\" /> 分享\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-gray-500\">\r\n                  {isGenerating ? '视频生成中...' : '点击下方按钮生成视频'}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {isGenerating && (\r\n              <div className=\"mt-4\">\r\n                <div className=\"flex justify-between text-sm mb-1\">\r\n                  <span>{generationStep}</span>\r\n                  <span>{generationProgress}%</span>\r\n                </div>\r\n                <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n                  <div \r\n                    className=\"bg-blue-600 h-2.5 rounded-full transition-all duration-300\" \r\n                    style={{ width: `${generationProgress}%` }}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {!isGenerating && !isGenerated && (\r\n              <div className=\"mt-4\">\r\n                <button\r\n                  className=\"w-full py-2 px-4 bg-blue-600 text-white font-medium rounded-md shadow-sm hover:bg-blue-700 flex items-center justify-center\"\r\n                  onClick={generateVideo}\r\n                >\r\n                  <FiPlay className=\"mr-2\" />\r\n                  生成视频\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          {/* 段落列表 */}\r\n          <div className=\"border rounded-lg p-4\">\r\n            <h2 className=\"text-lg font-medium text-gray-800 mb-4\">视频段落</h2>\r\n            \r\n            <div className=\"space-y-3\">\r\n              {videoProject.segments.map((segment, index) => (\r\n                <div key={segment.id} className=\"border rounded-md p-3 hover:bg-gray-50\">\r\n                  <div className=\"flex justify-between items-start mb-2\">\r\n                    <div className=\"font-medium\">段落 {index + 1}</div>\r\n                    <button className=\"text-blue-600 hover:text-blue-800\">\r\n                      <FiEdit size={16} />\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  <div className=\"text-sm text-gray-600 mb-2 line-clamp-2\">\r\n                    {segment.text}\r\n                  </div>\r\n                  \r\n                  <div className=\"flex justify-between text-xs text-gray-500\">\r\n                    <div>资源: {segment.resource}</div>\r\n                    <div>时长: {segment.duration}秒</div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* 底部状态栏 */}\r\n      <div className=\"mt-6 border-t pt-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center text-sm\">\r\n            {isGenerated ? (\r\n              <div className=\"flex items-center text-green-600\">\r\n                <FiCheck className=\"mr-1\" />\r\n                视频已生成\r\n              </div>\r\n            ) : isGenerating ? (\r\n              <div className=\"flex items-center text-blue-600\">\r\n                <FiClock className=\"mr-1\" />\r\n                正在生成视频...\r\n              </div>\r\n            ) : (\r\n              <div className=\"flex items-center text-gray-500\">\r\n                <FiAlertCircle className=\"mr-1\" />\r\n                准备就绪，等待生成\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"text-sm text-gray-500\">\r\n            预计文件大小: 约 25MB\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.720Z",
      "updatedAt": "2025-03-04T10:16:05.366Z"
    },
    {
      "id": "a8a132bb-a19f-421e-aa6c-b026ef114dad",
      "projectType": "video-generation",
      "componentName": "VoiceoverMatchingPage",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { FiImage, FiVideo, FiPlus, FiTrash2, FiArrowUp, FiArrowDown, FiPlay, FiPause } from 'react-icons/fi';\r\n\r\n// 模拟数据\r\nconst mockScript = `# 人工智能在视频制作中的应用\r\n\r\n## 引言\r\n人工智能正在彻底改变视频制作的方式。从自动剪辑到内容生成，AI工具正在使创作者能够更快、更高效地工作。\r\n\r\n## 主要应用\r\n- 自动脚本生成：AI可以基于关键词生成完整的视频脚本\r\n- 智能剪辑：自动识别最佳片段并组合\r\n- 语音合成：将文本转换为自然的语音旁白\r\n\r\n## 未来展望\r\n随着技术的进步，我们可以期待更多创新功能的出现，进一步简化视频制作流程。`;\r\n\r\nconst mockResources = [\r\n  { id: 1, title: '城市天际线', type: 'image', url: '/images/resources/skyline.jpg' },\r\n  { id: 2, title: '自然风景', type: 'image', url: '/images/resources/nature.jpg' },\r\n  { id: 3, title: '商务会议', type: 'video', url: '/videos/resources/meeting.mp4' },\r\n  { id: 4, title: '科技产品展示', type: 'video', url: '/videos/resources/tech.mp4' },\r\n  { id: 5, title: '抽象背景', type: 'image', url: '/images/resources/abstract.jpg' },\r\n  { id: 6, title: '人物特写', type: 'image', url: '/images/resources/portrait.jpg' },\r\n];\r\n\r\ninterface ScriptSegment {\r\n  id: string;\r\n  text: string;\r\n  resourceId: number | null;\r\n  duration: number;\r\n}\r\n\r\nexport default function VoiceoverMatchingPage() {\r\n  // 将脚本分段\r\n  const initialSegments: ScriptSegment[] = mockScript\r\n    .split('\\n\\n')\r\n    .map((text, index) => ({\r\n      id: `segment-${index}`,\r\n      text,\r\n      resourceId: null,\r\n      duration: 5, // 默认5秒\r\n    }));\r\n\r\n  const [segments, setSegments] = useState<ScriptSegment[]>(initialSegments);\r\n  const [resources] = useState(mockResources);\r\n  const [selectedSegmentId, setSelectedSegmentId] = useState<string | null>(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  // 选择段落\r\n  const handleSelectSegment = (id: string) => {\r\n    setSelectedSegmentId(id);\r\n  };\r\n\r\n  // 为段落分配资源\r\n  const handleAssignResource = (segmentId: string, resourceId: number) => {\r\n    setSegments(segments.map(segment => \r\n      segment.id === segmentId \r\n        ? { ...segment, resourceId } \r\n        : segment\r\n    ));\r\n  };\r\n\r\n  // 调整段落时长\r\n  const handleChangeDuration = (segmentId: string, duration: number) => {\r\n    setSegments(segments.map(segment => \r\n      segment.id === segmentId \r\n        ? { ...segment, duration: Math.max(1, duration) } \r\n        : segment\r\n    ));\r\n  };\r\n\r\n  // 上移段落\r\n  const handleMoveUp = (index: number) => {\r\n    if (index === 0) return;\r\n    const newSegments = [...segments];\r\n    [newSegments[index - 1], newSegments[index]] = [newSegments[index], newSegments[index - 1]];\r\n    setSegments(newSegments);\r\n  };\r\n\r\n  // 下移段落\r\n  const handleMoveDown = (index: number) => {\r\n    if (index === segments.length - 1) return;\r\n    const newSegments = [...segments];\r\n    [newSegments[index], newSegments[index + 1]] = [newSegments[index + 1], newSegments[index]];\r\n    setSegments(newSegments);\r\n  };\r\n\r\n  // 获取资源信息\r\n  const getResourceById = (id: number | null) => {\r\n    if (id === null) return null;\r\n    return resources.find(resource => resource.id === id) || null;\r\n  };\r\n\r\n  // 计算总时长\r\n  const totalDuration = segments.reduce((sum, segment) => sum + segment.duration, 0);\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-sm w-full max-w-6xl mx-auto\">\r\n      <h1 className=\"text-2xl font-bold text-gray-800 mb-6\">口播匹配画面</h1>\r\n      \r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        {/* 左侧：脚本段落列表 */}\r\n        <div className=\"lg:col-span-1 border rounded-lg overflow-hidden\">\r\n          <div className=\"bg-gray-50 p-3 border-b flex justify-between items-center\">\r\n            <h2 className=\"font-medium text-gray-700\">脚本段落</h2>\r\n            <div className=\"text-sm text-gray-500\">总时长: {totalDuration}秒</div>\r\n          </div>\r\n          \r\n          <div className=\"overflow-auto max-h-[600px]\">\r\n            {segments.map((segment, index) => {\r\n              const resource = getResourceById(segment.resourceId);\r\n              \r\n              return (\r\n                <div \r\n                  key={segment.id}\r\n                  className={`p-3 border-b cursor-pointer hover:bg-gray-50 ${\r\n                    selectedSegmentId === segment.id ? 'bg-blue-50 border-l-4 border-l-blue-500' : ''\r\n                  }`}\r\n                  onClick={() => handleSelectSegment(segment.id)}\r\n                >\r\n                  <div className=\"flex justify-between items-start mb-2\">\r\n                    <div className=\"font-medium\">{`段落 ${index + 1}`}</div>\r\n                    <div className=\"flex space-x-1\">\r\n                      <button \r\n                        className=\"p-1 text-gray-500 hover:text-gray-700\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleMoveUp(index);\r\n                        }}\r\n                        disabled={index === 0}\r\n                      >\r\n                        <FiArrowUp size={16} />\r\n                      </button>\r\n                      <button \r\n                        className=\"p-1 text-gray-500 hover:text-gray-700\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleMoveDown(index);\r\n                        }}\r\n                        disabled={index === segments.length - 1}\r\n                      >\r\n                        <FiArrowDown size={16} />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"text-sm text-gray-600 mb-2 line-clamp-2\">\r\n                    {segment.text}\r\n                  </div>\r\n                  \r\n                  <div className=\"flex justify-between items-center\">\r\n                    <div className=\"text-xs text-gray-500\">\r\n                      时长: {segment.duration}秒\r\n                    </div>\r\n                    {resource && (\r\n                      <div className=\"flex items-center text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded\">\r\n                        {resource.type === 'image' ? <FiImage className=\"mr-1\" /> : <FiVideo className=\"mr-1\" />}\r\n                        {resource.title}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 中间：段落编辑 */}\r\n        <div className=\"lg:col-span-1 border rounded-lg overflow-hidden\">\r\n          {selectedSegmentId ? (\r\n            (() => {\r\n              const segment = segments.find(s => s.id === selectedSegmentId);\r\n              if (!segment) return null;\r\n              \r\n              return (\r\n                <>\r\n                  <div className=\"bg-gray-50 p-3 border-b\">\r\n                    <h2 className=\"font-medium text-gray-700\">编辑段落</h2>\r\n                  </div>\r\n                  \r\n                  <div className=\"p-4 space-y-4\">\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        段落文本\r\n                      </label>\r\n                      <textarea\r\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        rows={8}\r\n                        value={segment.text}\r\n                        readOnly\r\n                      />\r\n                    </div>\r\n                    \r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        段落时长 (秒)\r\n                      </label>\r\n                      <div className=\"flex items-center\">\r\n                        <button\r\n                          className=\"px-3 py-1 border border-gray-300 rounded-l-md\"\r\n                          onClick={() => handleChangeDuration(segment.id, segment.duration - 1)}\r\n                        >\r\n                          -\r\n                        </button>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"w-20 px-3 py-1 border-t border-b border-gray-300 text-center\"\r\n                          value={segment.duration}\r\n                          onChange={(e) => handleChangeDuration(segment.id, parseInt(e.target.value) || 1)}\r\n                          min=\"1\"\r\n                        />\r\n                        <button\r\n                          className=\"px-3 py-1 border border-gray-300 rounded-r-md\"\r\n                          onClick={() => handleChangeDuration(segment.id, segment.duration + 1)}\r\n                        >\r\n                          +\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        匹配资源\r\n                      </label>\r\n                      {segment.resourceId ? (\r\n                        <div className=\"flex items-center justify-between p-2 border rounded-md\">\r\n                          <div className=\"flex items-center\">\r\n                            {getResourceById(segment.resourceId)?.type === 'image' ? (\r\n                              <FiImage className=\"mr-2 text-blue-500\" />\r\n                            ) : (\r\n                              <FiVideo className=\"mr-2 text-blue-500\" />\r\n                            )}\r\n                            <span>{getResourceById(segment.resourceId)?.title}</span>\r\n                          </div>\r\n                          <button\r\n                            className=\"text-red-500 hover:text-red-700\"\r\n                            onClick={() => handleAssignResource(segment.id, 0)}\r\n                          >\r\n                            <FiTrash2 />\r\n                          </button>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"text-gray-500 text-sm italic\">\r\n                          从右侧选择资源\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              );\r\n            })()\r\n          ) : (\r\n            <div className=\"flex items-center justify-center h-full p-6 text-gray-500\">\r\n              请从左侧选择一个段落进行编辑\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {/* 右侧：资源选择 */}\r\n        <div className=\"lg:col-span-1 border rounded-lg overflow-hidden\">\r\n          <div className=\"bg-gray-50 p-3 border-b\">\r\n            <h2 className=\"font-medium text-gray-700\">选择资源</h2>\r\n          </div>\r\n          \r\n          <div className=\"overflow-auto max-h-[600px] p-3 grid grid-cols-2 gap-3\">\r\n            {resources.map(resource => (\r\n              <div\r\n                key={resource.id}\r\n                className=\"border rounded-md overflow-hidden cursor-pointer hover:shadow-md\"\r\n                onClick={() => selectedSegmentId && handleAssignResource(selectedSegmentId, resource.id)}\r\n              >\r\n                <div className=\"h-24 bg-gray-100 flex items-center justify-center\">\r\n                  {resource.type === 'image' ? (\r\n                    <FiImage className=\"text-gray-400 text-3xl\" />\r\n                  ) : (\r\n                    <FiVideo className=\"text-gray-400 text-3xl\" />\r\n                  )}\r\n                </div>\r\n                <div className=\"p-2\">\r\n                  <div className=\"text-sm font-medium truncate\">{resource.title}</div>\r\n                  <div className=\"text-xs text-gray-500\">{resource.type}</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* 底部预览控制 */}\r\n      <div className=\"mt-6 border rounded-lg p-4\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"font-medium text-gray-700\">预览</h2>\r\n          <button\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center\"\r\n            onClick={() => setIsPlaying(!isPlaying)}\r\n          >\r\n            {isPlaying ? (\r\n              <>\r\n                <FiPause className=\"mr-2\" />\r\n                暂停\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FiPlay className=\"mr-2\" />\r\n                播放\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"bg-gray-100 h-64 rounded-md flex items-center justify-center\">\r\n          <div className=\"text-gray-500\">\r\n            {isPlaying ? '正在播放预览...' : '点击播放按钮预览视频'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} ",
      "createdAt": "2025-03-04T10:04:26.722Z",
      "updatedAt": "2025-03-04T10:16:05.350Z"
    }
  ]
}